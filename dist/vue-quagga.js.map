{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/quagga/dist/quagga.min.js","webpack:///./node_modules/sdp/sdp.js","webpack:///./src/Scanner.vue?1b7e","webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack:///./src/Scanner.vue?83cd","webpack:///./src/Scanner.vue?75d6","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/webrtc-adapter/src/js/utils.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack:///./src/Scanner.vue?44f0","webpack:///./src/Scanner.vue?7df9","webpack:///src/Scanner.vue","webpack:///./src/Scanner.vue","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./src/index.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","configurable","default","this","_row","config","supplements","_nextUnset","length","_matchPattern","a","u","f","SINGLE_CODE_ERROR","Number","MAX_VALUE","Math","abs","_nextSet","_correctBars","_matchTrace","error","code","start","push","end","counter","decodePattern","_decode","reverse","direction","DIRECTION","REVERSE","FORWARD","format","FORMAT","_matchRange","_fillCounters","_toCounters","init","writeable","Exception","StartNotFoundException","CodeNotFoundException","PatternNotFoundException","CONFIG_KEYS","Array","isArray","shuffle","floor","random","toPointList","join","threshold","apply","maxIndex","max","sum","keys","forEach","assign","arguments","CODE_L_START","CODE_G_START","START_PATTERN","STOP_PATTERN","MIDDLE_PATTERN","EXTENSION_START_PATTERN","CODE_PATTERN","CODE_FREQUENCY","AVG_CODE_ERROR","constructor","_decodeCode","_findPattern","_findStart","_verifyTrailingWhitespace","_findEnd","_calculateFirstDigit","_decodePayload","unshift","_checksum","_decodeExtensions","decodedCodes","supplement","codeset","startInfo","decode","type","description","self","Function","Float32Array","drawRect","strokeStyle","color","fillStyle","lineWidth","beginPath","strokeRect","x","y","drawPath","moveTo","lineTo","closePath","stroke","drawImage","getImageData","data","putImageData","clear","set","delete","has","__data__","map","test","propertyIsEnumerable","h","Int32Array","sqrt","concat","b","toVec2","clone","toVec3","E","round","g","fits","add","createPoint","score","item","singleChannel","size","v","x-small","small","medium","large","x-large","j","width","height","reduce","parseFloat","unit","indexOf","C","sx","left","sy","top","sw","right","sh","bottom","Uint8Array","inImageWithBorder","sample","clearArray","subImage","subImageAsCopy","copyTo","getSafe","indexMapping","zeroBorder","invert","convolve","moments","_","PI","m00","m01","m10","m11","m02","m20","theta","rad","isNaN","atan","vec","cos","sin","show","getContext","overlay","writable","webpackPolyfill","deprecate","paths","children","searchDirections","cy","dir","cx","next","prev","trace","contourTracing","ALPHABETH_STRING","ALPHABET","CHARACTER_ENCODINGS","ASTERISK","_toPattern","_patternToChar","pop","String","fromCharCode","_findNextWidth","getPrototypeOf","nodeType","Buffer","isBuffer","isTypedArray","eval","window","S","R","getWidth","getHeight","D","q","U","$","locator","P","k","decoder","inputStream","document","createElement","H","createVideoStream","createImageStream","querySelector","appendChild","createLiveStream","F","request","constraints","then","trigger","catch","setAttribute","setInputStream","addEventListener","checkImageConstraints","K","dom","image","className","ctx","getCanvasSize","w","V","A","numOfWorkers","play","target","nodeName","Q","getTopRight","barcodes","line","box","boxes","I","filter","codeResult","addResult","L","publish","some","locate","decodeFromBoundingBoxes","Y","busy","attachData","imageData","grab","worker","postMessage","cmd","buffer","frequency","T","requestAnimFrame","performance","now","Worker","onmessage","event","URL","revokeObjectURL","result","X","message","ImageWrapper","onProcessed","setReaders","readers","Blob","toString","createObjectURL","slice","terminate","M","N","z","W","B","G","stop","release","clearEventHandlers","pause","onDetected","subscribe","offDetected","unsubscribe","offProcessed","O","registerResultCollector","canvas","decodeSingle","sequence","src","halfSample","once","ImageDebug","ResultCollector","CameraAccess","every","blacklist","capacity","capture","frame","toDataURL","getResults","dot","id","point","getPoints","getCenter","subscribers","async","setTimeout","callback","navigator","mediaDevices","enumerateDevices","Promise","reject","Error","getUserMedia","originalSize","from","updateData","updateFrom","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","imul","TypeError","facingMode","area","patchSize","iterator","code_128_reader","ean_reader","ean_5_reader","ean_2_reader","ean_8_reader","code_39_reader","code_39_vin_reader","codabar_reader","upc_reader","upc_e_reader","i2of5_reader","2of5_reader","code_93_reader","ceil","getBarcodeLine","toBinaryLine","barcodeLine","pow","atan2","angle","pattern","decodeFromBoundingBox","multiple","UP","DOWN","min","pos","val","debug","printFrequency","printPattern","fillColor","fillRect","srcObject","videoWidth","videoHeight","minAspectRatio","aspectRatio","console","log","facing","getVideoTracks","audio","video","deviceId","resolve","enumerateVideoDevices","kind","getActiveStreamLabel","label","getActiveTrack","FileReader","onload","readAsArrayBuffer","getUint8","getUint16","getUint32","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","response","onerror","send","DataView","byteLength","274","getConfig","getRealWidth","getRealHeight","getData","getFrame","img","tags","orientation","translate","rotate","getSize","loaded","load","notLoaded","addImage","splice","substr","lastIndexOf","Image","setWidth","setHeight","ended","setCurrentTime","currentTime","removeEventListener","setTopRight","setCanvasSize","ArrayBuffer","copy","transformMat2","scale","skeletonize","index","binary","useWorker","rasterize","count","sort","createContour2D","firstVertex","insideContours","nextpeer","prevpeer","CONTOUR_DIR","CW_DIR","CCW_DIR","UNKNOWN_DIR","DIR","OUTSIDE_EDGE","INSIDE_EDGE","cc","drawContour","__webpack_exports__","stdlib","foreign","images","erode","inImagePtr","outImagePtr","yStart1","yStart2","xStart1","xStart2","offset","subtract","aImagePtr","bImagePtr","bitwiseOr","countNonZero","imagePtr","dilate","memcpy","srcImagePtr","dstImagePtr","subImagePtr","erodedImagePtr","tempImagePtr","skelImagePtr","done","barSpaceRatio","_verifyCounterLength","_counters","START_END","MIN_ENCODED_CHARS","MAX_ACCEPTABLE","PADDING","startCounter","_isStartEnd","_verifyWhitespace","_validateResult","_sumCounters","_calculatePatternLength","_thresholdResultPattern","space","narrow","counts","wide","bar","_charToPattern","charCodeAt","_computeAlternatingThreshold","endCounter","CODE_SHIFT","CODE_C","CODE_B","CODE_A","START_CODE_A","START_CODE_B","START_CODE_C","STOP_CODE","MODULE_INDICES","correction","_correct","endInfo","replace","match","_checkChecksum","split","_verifyEnd","_verifyChecksums","_decodeExtended","_matchCheckChar","parseInt","normalizeBarSpaceWidth","MAX_CORRECTION_FACTOR","_decodePair","_determineParity","_convertToUPCA","charAt","substring","RegExp","allocUnsafe","byteOffset","isConcatSpreadable","exec","IE_PROTO","hash","string","cache","process","binding","Date","Cache","SDPUtils","generateIdentifier","localCName","splitLines","blob","trim","splitSections","part","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","parseCandidate","parts","candidate","foundation","component","protocol","toLowerCase","priority","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","toUpperCase","parseIceOptions","parseRtpMap","parsed","payloadType","clockRate","channels","numChannels","writeRtpMap","codec","pt","undefined","preferredPayloadType","parseExtmap","uri","writeExtmap","headerExtension","preferredId","parseFmtp","kv","writeFmtp","parameters","params","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","getIceParameters","password","writeIceParameters","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","mline","rtpmapline","fmtps","writeRtpDescription","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","JSON","parse","stringify","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","parseMsid","spec","stream","track","planB","msidParts","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessUser","version","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","rtpSender","rtpReceiver","msid","sendEncodingParameters","getDirection","getKind","isRejected","parseMLine","fmt","parseOLine","username","sessionId","sessionVersion","netType","addressType","isValidSDP","content","locals","dtlsRole","trackId","_initialTrackId","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","findCodecByPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","rCodec","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","action","signalingState","offer","setLocalDescription","setRemoteDescription","answer","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","find","remoteCandidate","addRemoteCandidate","makeError","NotSupportedError","InvalidStateError","InvalidAccessError","OperationError","edgeVersion","addTrackToStreamAndFireEvent","addTrack","dispatchEvent","MediaStreamTrackEvent","fireAddTrack","pc","receiver","streams","trackEvent","Event","_dispatchEvent","RTCPeerConnection","_eventTarget","createDocumentFragment","method","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","iceServers","hasTurn","server","urls","url","warn","isString","filterIceServers","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","RTCRtpSender","addStream","getTracks","clonedStream","idx","clonedTrack","enabled","removeTrack","sender","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","bufferedCandidateEvents","bufferCandidates","state","_gather","onlocalcandidate","evt","sdpMid","cand","serializedCandidate","toJSON","complete","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","_disposeIceAndDtlsTransports","_transceive","recv","encodings","receive","isIceLite","rejected","remoteIceParameters","remoteDtlsParameters","_updateSignalingState","receiverList","iceOptions","remoteMsid","isComplete","cands","setTransport","setRemoteCandidates","MediaStream","RTCRtpReceiver","getCapabilities","isNewTrack","nativeTrack","sid","close","newState","states","new","closed","checking","connected","completed","disconnected","failed","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","mandatory","optional","offerToReceiveAudio","offerToReceiveVideo","remoteCodec","hdrExt","rHdrExt","getLocalCandidates","desc","RTCSessionDescription","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","addIceCandidate","candidateString","getStats","selector","MediaStreamTrack","senderOrReceiver","promises","all","allStats","results","Map","stats","stat","ortcObjectName","nativeGetstats","nativeStats","mapStats","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","methods","nativeMethod","args","_node_modules_vue_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_Scanner_vue_vue_type_style_index_0_id_4ebacf15_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","useSourceMap","list","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","wrapPeerConnectionEvent","eventNameToWrap","wrapper","proto","nativeAddEventListener","nativeEventName","cb","wrappedCallback","modifiedEvent","_eventMap","nativeRemoveEventListener","unwrappedCb","[object Object]","disableLog","bool","disableWarnings","deprecated","oldMethod","newMethod","detectBrowser","browser","mozGetUserMedia","userAgent","webkitGetUserMedia","compactObject","accumulator","isObject","isEmptyObject","getusermedia_logging","shimGetUserMedia","browserDetails","constraintsToChrome_","ideal","exact","oldname_","oc","mix","advanced","shimConstraints_","func","remap","face","getSupportedFacingModeLies","getSupportedConstraints","matches","devices","dev","includes","shimError_","PermissionDeniedError","PermissionDismissedError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","constraint","constraintName","onSuccess","onError","origGetUserMedia","cs","DOMException","shimGetDisplayMedia","getSourceId","getDisplayMedia","sourceId","widthSpecified","heightSpecified","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","filterStats","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","walkStats","base","resultSet","endsWith","shimMediaStream","webkitMediaStream","shimOnTrack","_ontrack","origSetRemoteDescription","_ontrackpoly","te","shimGetSendersWithDtmf","shimSenderWithDtmf","dtmf","_dtmf","createDTMFSender","_pc","_senders","origAddTrack","origRemoveTrack","origAddStream","origRemoveStream","origGetSenders","senders","shimSenderReceiverGetStats","origGetReceivers","receivers","srcElement","origGetStats","err","shimAddTrackRemoveTrackWithNative","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","internalId","externalStream","internalStream","oldStream","origSetLocalDescription","replaceExternalStreamId","origLocalDescription","getOwnPropertyDescriptor","streamid","shimPeerConnection","webkitRTCPeerConnection","successCallback","errorCallback","fixChromeStats_","standardReport","report","standardStats","timestamp","names","makeMapStats","successCallbackWrapper_","RTCIceCandidate","nativeAddIceCandidate","fixNegotiationNeeded","getusermedia_shimGetUserMedia","getdisplaymedia_shimGetDisplayMedia","edge_shim_shimPeerConnection","origMSTEnabled","ev","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","rtcpeerconnection_default","validTurn","startsWith","shimReplaceTrack","replaceTrack","setTrack","firefox_getusermedia_shimGetUserMedia","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","firefox_getdisplaymedia_shimGetDisplayMedia","preferredMediaSource","mediaSource","firefox_shim_shimOnTrack","RTCTrackEvent","firefox_shim_shimPeerConnection","mozRTCPeerConnection","modernStatsTypes","nativeGetStats","onSucc","onErr","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimLocalStreamsAPI","_localStreams","_addTrack","tracks","shimRemoteStreamsAPI","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","failureCallback","options","promise","withCallback","safari_shim_shimGetUserMedia","_getUserMedia","shimConstraints","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","generateCertificate","shimTrackEventTransceiver","RTCTransceiver","shimCreateOfferLegacy","origCreateOffer","audioTransceiver","getTransceivers","setDirection","addTransceiver","videoTransceiver","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","sdp_default","augmentedCandidate","shimMaxMessageSize","RTCSctpTransport","_sctp","mLine","sctpInDescription","isFirefox","getRemoteFirefoxVersion","canSendMMS","remoteIsFirefox","canSendMaxMessageSize","getCanSendMaxMessageSize","remoteMMS","maxMessageSize","getMaxMessageSize","POSITIVE_INFINITY","sctp","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","origCreateDataChannel","createDataChannel","dataChannel","channel","shimConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","newEvent","removeAllowExtmapMixed","nativeSRD","shimChrome","shimFirefox","shimEdge","shimSafari","logging","adapter","commonShim","common_shim_namespaceObject","chrome_shim_namespaceObject","browserShim","firefox_shim_namespaceObject","edge_shim_namespaceObject","safari_shim_namespaceObject","adapterFactory","render","_h","$createElement","_self","_c","_m","_withStripped","src_Scannervue_type_script_lang_js_","props","readerTypes","readerSize","quaggaState","mounted","quagga_min_default","_onDetected","_onProcessed","drawingCtx","drawingCanvas","clearRect","getAttribute","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","normalizeComponent","staticClass","attrs","_v","__file","Scanner","install","Vue","listToStyles","parentId","styles","newStyles","css","media","addStylesClient","hasDocument","DEBUG","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","ssrIdKey","isOldIE","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","addStyle","createStyleElement","styleElement","update","remove","parentNode","removeChild","styleIndex","applyToSingletonTag","ssrId","styleSheet","cssText","firstChild","createTextNode","newObj","textStore","replaceText","replacement","Boolean","cssNode","childNodes","insertBefore"],"mappings":"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","file":"vue-quagga.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e(e.toString()).default:\"object\"==typeof exports?exports.Quagga=e(e.toString()).default:t.Quagga=e(e.toString()).default}(this,function(t){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/\",e(e.s=166)}([function(t,e){function n(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)}t.exports=n},function(t,e,n){\"use strict\";function r(t,e){return this._row=[],this.config=t||{},this.supplements=e,this}var o=n(3);r.prototype._nextUnset=function(t,e){var n;for(void 0===e&&(e=0),n=e;n<t.length;n++)if(!t[n])return n;return t.length},r.prototype._matchPattern=function(t,e,n){var r,o,i,a,u=0,c=0,s=0,f=0;for(n=n||this.SINGLE_CODE_ERROR||1,r=0;r<t.length;r++)s+=t[r],f+=e[r];if(s<f)return Number.MAX_VALUE;for(o=s/f,n*=o,r=0;r<t.length;r++){if(i=t[r],a=e[r]*o,(c=Math.abs(i-a)/a)>n)return Number.MAX_VALUE;u+=c}return u/f},r.prototype._nextSet=function(t,e){var n;for(e=e||0,n=e;n<t.length;n++)if(t[n])return n;return t.length},r.prototype._correctBars=function(t,e,n){for(var r=n.length,o=0;r--;)(o=t[n[r]]*(1-(1-e)/2))>1&&(t[n[r]]=o)},r.prototype._matchTrace=function(t,e){var n,r,o=[],i=this,a=i._nextSet(i._row),u=!i._row[a],c=0,s={error:Number.MAX_VALUE,code:-1,start:0};if(t){for(n=0;n<t.length;n++)o.push(0);for(n=a;n<i._row.length;n++)if(i._row[n]^u)o[c]++;else{if(c===o.length-1)return r=i._matchPattern(o,t),r<e?(s.start=n-a,s.end=n,s.counter=o,s):null;c++,o[c]=1,u=!u}}else for(o.push(0),n=a;n<i._row.length;n++)i._row[n]^u?o[c]++:(c++,o.push(0),o[c]=1,u=!u);return s.start=a,s.end=i._row.length-1,s.counter=o,s},r.prototype.decodePattern=function(t){var e,n=this;return n._row=t,e=n._decode(),null===e?(n._row.reverse(),(e=n._decode())&&(e.direction=r.DIRECTION.REVERSE,e.start=n._row.length-e.start,e.end=n._row.length-e.end)):e.direction=r.DIRECTION.FORWARD,e&&(e.format=n.FORMAT),e},r.prototype._matchRange=function(t,e,n){var r;for(t=t<0?0:t,r=t;r<e;r++)if(this._row[r]!==n)return!1;return!0},r.prototype._fillCounters=function(t,e,n){var r,o=this,i=0,a=[];for(n=void 0===n||n,t=void 0!==t?t:o._nextUnset(o._row),e=e||o._row.length,a[i]=0,r=t;r<e;r++)o._row[r]^n?a[i]++:(i++,a[i]=1,n=!n);return a},r.prototype._toCounters=function(t,e){var n,r=this,i=e.length,a=r._row.length,u=!r._row[t],c=0;for(o.a.init(e,0),n=t;n<a;n++)if(r._row[n]^u)e[c]++;else{if(++c===i)break;e[c]=1,u=!u}return e},Object.defineProperty(r.prototype,\"FORMAT\",{value:\"unknown\",writeable:!1}),r.DIRECTION={FORWARD:1,REVERSE:-1},r.Exception={StartNotFoundException:\"Start-Info was not found!\",CodeNotFoundException:\"Code could not be found!\",PatternNotFoundException:\"Pattern could not be found!\"},r.CONFIG_KEYS={},e.a=r},function(t,e){var n=Array.isArray;t.exports=n},function(t,e,n){\"use strict\";e.a={init:function(t,e){for(var n=t.length;n--;)t[n]=e},shuffle:function(t){var e,n,r=t.length-1;for(r;r>=0;r--)e=Math.floor(Math.random()*r),n=t[r],t[r]=t[e],t[e]=n;return t},toPointList:function(t){var e,n,r=[],o=[];for(e=0;e<t.length;e++){for(r=[],n=0;n<t[e].length;n++)r[n]=t[e][n];o[e]=\"[\"+r.join(\",\")+\"]\"}return\"[\"+o.join(\",\\r\\n\")+\"]\"},threshold:function(t,e,n){var r,o=[];for(r=0;r<t.length;r++)n.apply(t,[t[r]])>=e&&o.push(t[r]);return o},maxIndex:function(t){var e,n=0;for(e=0;e<t.length;e++)t[e]>t[n]&&(n=e);return n},max:function t(e){var n,t=0;for(n=0;n<e.length;n++)e[n]>t&&(t=e[n]);return t},sum:function t(e){for(var n=e.length,t=0;n--;)t+=e[n];return t}}},function(t,e,n){\"use strict\";function r(t,e){t=a()(o(),t),u.a.call(this,t,e)}function o(){var t={};return Object.keys(r.CONFIG_KEYS).forEach(function(e){t[e]=r.CONFIG_KEYS[e].default}),t}var i=n(28),a=n.n(i),u=n(1),c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},s={CODE_L_START:{value:0},CODE_G_START:{value:10},START_PATTERN:{value:[1,1,1]},STOP_PATTERN:{value:[1,1,1]},MIDDLE_PATTERN:{value:[1,1,1,1,1]},EXTENSION_START_PATTERN:{value:[1,1,2]},CODE_PATTERN:{value:[[3,2,1,1],[2,2,2,1],[2,1,2,2],[1,4,1,1],[1,1,3,2],[1,2,3,1],[1,1,1,4],[1,3,1,2],[1,2,1,3],[3,1,1,2],[1,1,2,3],[1,2,2,2],[2,2,1,2],[1,1,4,1],[2,3,1,1],[1,3,2,1],[4,1,1,1],[2,1,3,1],[3,1,2,1],[2,1,1,3]]},CODE_FREQUENCY:{value:[0,11,13,14,19,25,28,21,22,26]},SINGLE_CODE_ERROR:{value:.7},AVG_CODE_ERROR:{value:.48},FORMAT:{value:\"ean_13\",writeable:!1}};r.prototype=Object.create(u.a.prototype,s),r.prototype.constructor=r,r.prototype._decodeCode=function(t,e){var n,r,o,i=[0,0,0,0],a=this,u=t,c=!a._row[u],s=0,f={error:Number.MAX_VALUE,code:-1,start:t,end:t};for(e||(e=a.CODE_PATTERN.length),n=u;n<a._row.length;n++)if(a._row[n]^c)i[s]++;else{if(s===i.length-1){for(r=0;r<e;r++)(o=a._matchPattern(i,a.CODE_PATTERN[r]))<f.error&&(f.code=r,f.error=o);return f.end=n,f.error>a.AVG_CODE_ERROR?null:f}s++,i[s]=1,c=!c}return null},r.prototype._findPattern=function(t,e,n,r,o){var i,a,u,c,s=[],f=this,l=0,d={error:Number.MAX_VALUE,code:-1,start:0,end:0};for(e||(e=f._nextSet(f._row)),void 0===n&&(n=!1),void 0===r&&(r=!0),void 0===o&&(o=f.AVG_CODE_ERROR),i=0;i<t.length;i++)s[i]=0;for(i=e;i<f._row.length;i++)if(f._row[i]^n)s[l]++;else{if(l===s.length-1){for(c=0,u=0;u<s.length;u++)c+=s[u];if((a=f._matchPattern(s,t))<o)return d.error=a,d.start=i-c,d.end=i,d;if(!r)return null;for(u=0;u<s.length-2;u++)s[u]=s[u+2];s[s.length-2]=0,s[s.length-1]=0,l--}else l++;s[l]=1,n=!n}return null},r.prototype._findStart=function(){for(var t,e,n=this,r=n._nextSet(n._row);!e;){if(!(e=n._findPattern(n.START_PATTERN,r)))return null;if((t=e.start-(e.end-e.start))>=0&&n._matchRange(t,e.start,0))return e;r=e.end,e=null}},r.prototype._verifyTrailingWhitespace=function(t){var e,n=this;return e=t.end+(t.end-t.start),e<n._row.length&&n._matchRange(t.end,e,0)?t:null},r.prototype._findEnd=function(t,e){var n=this,r=n._findPattern(n.STOP_PATTERN,t,e,!1);return null!==r?n._verifyTrailingWhitespace(r):null},r.prototype._calculateFirstDigit=function(t){var e,n=this;for(e=0;e<n.CODE_FREQUENCY.length;e++)if(t===n.CODE_FREQUENCY[e])return e;return null},r.prototype._decodePayload=function(t,e,n){var r,o,i=this,a=0;for(r=0;r<6;r++){if(!(t=i._decodeCode(t.end)))return null;t.code>=i.CODE_G_START?(t.code=t.code-i.CODE_G_START,a|=1<<5-r):a|=0<<5-r,e.push(t.code),n.push(t)}if(null===(o=i._calculateFirstDigit(a)))return null;if(e.unshift(o),null===(t=i._findPattern(i.MIDDLE_PATTERN,t.end,!0,!1)))return null;for(n.push(t),r=0;r<6;r++){if(!(t=i._decodeCode(t.end,i.CODE_G_START)))return null;n.push(t),e.push(t.code)}return t},r.prototype._decode=function(){var t,e,n=this,r=[],o=[],i={};if(!(t=n._findStart()))return null;if(e={code:t.code,start:t.start,end:t.end},o.push(e),!(e=n._decodePayload(e,r,o)))return null;if(!(e=n._findEnd(e.end,!1)))return null;if(o.push(e),!n._checksum(r))return null;if(this.supplements.length>0){var a=this._decodeExtensions(e.end);if(!a)return null;var u=a.decodedCodes[a.decodedCodes.length-1],s={start:u.start+((u.end-u.start)/2|0),end:u.end};if(!n._verifyTrailingWhitespace(s))return null;i={supplement:a,code:r.join(\"\")+a.code}}return c({code:r.join(\"\"),start:t.start,end:e.end,codeset:\"\",startInfo:t,decodedCodes:o},i)},r.prototype._decodeExtensions=function(t){var e,n,r=this._nextSet(this._row,t),o=this._findPattern(this.EXTENSION_START_PATTERN,r,!1,!1);if(null===o)return null;for(e=0;e<this.supplements.length;e++)if(null!==(n=this.supplements[e].decode(this._row,o.end)))return{code:n.code,start:r,startInfo:o,end:n.end,codeset:\"\",decodedCodes:n.decodedCodes};return null},r.prototype._checksum=function(t){var e,n=0;for(e=t.length-2;e>=0;e-=2)n+=t[e];for(n*=3,e=t.length-1;e>=0;e-=2)n+=t[e];return n%10==0},r.CONFIG_KEYS={supplements:{type:\"arrayOf(string)\",default:[],description:\"Allowed extensions to be decoded (2 and/or 5)\"}},e.a=r},function(t,e,n){var r=n(38),o=\"object\"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function(\"return this\")();t.exports=i},function(t,e){function n(t){return null!=t&&\"object\"==typeof t}t.exports=n},function(t,e){function n(t){var e=new Float32Array(2);return e[0]=t[0],e[1]=t[1],e}t.exports=n},function(t,e,n){function r(t){return null==t?void 0===t?c:u:s&&s in Object(t)?i(t):a(t)}var o=n(11),i=n(119),a=n(146),u=\"[object Null]\",c=\"[object Undefined]\",s=o?o.toStringTag:void 0;t.exports=r},function(t,e,n){\"use strict\";e.a={drawRect:function(t,e,n,r){n.strokeStyle=r.color,n.fillStyle=r.color,n.lineWidth=1,n.beginPath(),n.strokeRect(t.x,t.y,e.x,e.y)},drawPath:function(t,e,n,r){n.strokeStyle=r.color,n.fillStyle=r.color,n.lineWidth=r.lineWidth,n.beginPath(),n.moveTo(t[0][e.x],t[0][e.y]);for(var o=1;o<t.length;o++)n.lineTo(t[o][e.x],t[o][e.y]);n.closePath(),n.stroke()},drawImage:function(t,e,n){var r,o=n.getImageData(0,0,e.x,e.y),i=o.data,a=t.length,u=i.length;if(u/a!=4)return!1;for(;a--;)r=t[a],i[--u]=255,i[--u]=r,i[--u]=r,i[--u]=r;return n.putImageData(o,0,0),!0}}},function(t,e,n){function r(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}var o=n(133),i=n(134),a=n(135),u=n(136),c=n(137);r.prototype.clear=o,r.prototype.delete=i,r.prototype.get=a,r.prototype.has=u,r.prototype.set=c,t.exports=r},function(t,e,n){var r=n(5),o=r.Symbol;t.exports=o},function(t,e,n){function r(t,e){for(var n=t.length;n--;)if(o(t[n][0],e))return n;return-1}var o=n(17);t.exports=r},function(t,e,n){function r(t,e){return o(t)?t:i(t,e)?[t]:a(u(t))}var o=n(2),i=n(130),a=n(154),u=n(165);t.exports=r},function(t,e,n){function r(t,e){var n=t.__data__;return o(e)?n[\"string\"==typeof e?\"string\":\"hash\"]:n.map}var o=n(131);t.exports=r},function(t,e){function n(t,e){return!!(e=null==e?r:e)&&(\"number\"==typeof t||o.test(t))&&t>-1&&t%1==0&&t<e}var r=9007199254740991,o=/^(?:0|[1-9]\\d*)$/;t.exports=n},function(t,e,n){var r=n(22),o=r(Object,\"create\");t.exports=o},function(t,e){function n(t,e){return t===e||t!==t&&e!==e}t.exports=n},function(t,e,n){var r=n(96),o=n(6),i=Object.prototype,a=i.hasOwnProperty,u=i.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(t){return o(t)&&a.call(t,\"callee\")&&!u.call(t,\"callee\")};t.exports=c},function(t,e,n){\"use strict\";function r(t,e){return{x:t,y:e,toVec2:function(){return b.clone([this.x,this.y])},toVec3:function(){return E.clone([this.x,this.y,1])},round:function(){return this.x=this.x>0?Math.floor(this.x+.5):Math.floor(this.x-.5),this.y=this.y>0?Math.floor(this.y+.5):Math.floor(this.y-.5),this}}}function o(t,e,n){n||(n=t);for(var r=t.data,o=r.length,i=n.data;o--;)i[o]=r[o]<e?1:0}function i(t,e){e||(e=8);for(var n=t.data,r=n.length,o=8-e,i=1<<e,a=new Int32Array(i);r--;)a[n[r]>>o]++;return a}function a(t,e){function n(t,e){var n,r=0;for(n=t;n<=e;n++)r+=a[n];return r}function r(t,e){var n,r=0;for(n=t;n<=e;n++)r+=n*a[n];return r}function o(){var o,u,c,s,f,l,d,h=[0],p=(1<<e)-1;for(a=i(t,e),s=1;s<p;s++)o=n(0,s),u=n(s+1,p),c=o*u,0===c&&(c=1),f=r(0,s)*u,l=r(s+1,p)*o,d=f-l,h[s]=d*d/c;return x.a.maxIndex(h)}e||(e=8);var a,u=8-e;return o()<<u}function u(t,e){var n=a(t);return o(t,n,e),n}function c(t,e,n){function r(t){var e=!1;for(i=0;i<c.length;i++)a=c[i],a.fits(t)&&(a.add(t),e=!0);return e}var o,i,a,u,c=[];for(n||(n=\"rad\"),o=0;o<t.length;o++)u=m.a.createPoint(t[o],o,n),r(u)||c.push(m.a.create(u,e));return c}function s(t,e,n){var r,o,i,a,u=0,c=0,s=[];for(r=0;r<e;r++)s[r]={score:0,item:null};for(r=0;r<t.length;r++)if((o=n.apply(this,[t[r]]))>c)for(i=s[u],i.score=o,i.item=t[r],c=Number.MAX_VALUE,a=0;a<e;a++)s[a].score<c&&(c=s[a].score,u=a);return s}function f(t,e,n){for(var r,o=0,i=e.x,a=Math.floor(t.length/4),u=e.x/2,c=0,s=e.x;i<a;){for(r=0;r<u;r++)n[c]=(.299*t[4*o+0]+.587*t[4*o+1]+.114*t[4*o+2]+(.299*t[4*(o+1)+0]+.587*t[4*(o+1)+1]+.114*t[4*(o+1)+2])+(.299*t[4*i+0]+.587*t[4*i+1]+.114*t[4*i+2])+(.299*t[4*(i+1)+0]+.587*t[4*(i+1)+1]+.114*t[4*(i+1)+2]))/4,c++,o+=2,i+=2;o+=s,i+=s}}function l(t,e,n){var r,o=t.length/4|0;if(n&&n.singleChannel===!0)for(r=0;r<o;r++)e[r]=t[4*r+0];else for(r=0;r<o;r++)e[r]=.299*t[4*r+0]+.587*t[4*r+1]+.114*t[4*r+2]}function d(t,e){for(var n=t.data,r=t.size.x,o=e.data,i=0,a=r,u=n.length,c=r/2,s=0;a<u;){for(var f=0;f<c;f++)o[s]=Math.floor((n[i]+n[i+1]+n[a]+n[a+1])/4),s++,i+=2,a+=2;i+=r,a+=r}}function h(t,e){var n=t[0],r=t[1],o=t[2],i=o*r,a=i*(1-Math.abs(n/60%2-1)),u=o-i,c=0,s=0,f=0;return e=e||[0,0,0],n<60?(c=i,s=a):n<120?(c=a,s=i):n<180?(s=i,f=a):n<240?(s=a,f=i):n<300?(c=a,f=i):n<360&&(c=i,f=a),e[0]=255*(c+u)|0,e[1]=255*(s+u)|0,e[2]=255*(f+u)|0,e}function p(t){var e,n=[],r=[];for(e=1;e<Math.sqrt(t)+1;e++)t%e==0&&(r.push(e),e!==t/e&&n.unshift(Math.floor(t/e)));return r.concat(n)}function v(t,e){for(var n=0,r=0,o=[];n<t.length&&r<e.length;)t[n]===e[r]?(o.push(t[n]),n++,r++):t[n]>e[r]?r++:n++;return o}function _(t,e){function n(t){for(var e=0,n=t[Math.floor(t.length/2)];e<t.length-1&&t[e]<d;)e++;return e>0&&(n=Math.abs(t[e]-d)>Math.abs(t[e-1]-d)?t[e-1]:t[e]),d/n<c[f+1]/c[f]&&d/n>c[f-1]/c[f]?{x:n,y:n}:null}var r,o=p(e.x),i=p(e.y),a=Math.max(e.x,e.y),u=v(o,i),c=[8,10,15,20,32,60,80],s={\"x-small\":5,small:4,medium:3,large:2,\"x-large\":1},f=s[t]||s.medium,l=c[f],d=Math.floor(a/l);return r=n(u),r||(r=n(p(a)))||(r=n(p(d*l))),r}function g(t){return{value:parseFloat(t),unit:(t.indexOf(\"%\"),t.length,\"%\")}}function y(t,e,n){var r={width:t,height:e},o=Object.keys(n).reduce(function(t,e){var o=n[e],i=g(o),a=C[e](i,r);return t[e]=a,t},{});return{sx:o.left,sy:o.top,sw:o.right-o.left,sh:o.bottom-o.top}}var m=n(50),x=n(3);e.b=r,e.f=u,e.g=c,e.h=s,e.c=f,e.d=l,e.i=d,e.a=h,e.e=_,e.j=y;var b={clone:n(7)},E={clone:n(83)},C={top:function(t,e){if(\"%\"===t.unit)return Math.floor(e.height*(t.value/100))},right:function(t,e){if(\"%\"===t.unit)return Math.floor(e.width-e.width*(t.value/100))},bottom:function(t,e){if(\"%\"===t.unit)return Math.floor(e.height-e.height*(t.value/100))},left:function(t,e){if(\"%\"===t.unit)return Math.floor(e.width*(t.value/100))}}},function(t,e,n){\"use strict\";function r(t,e,n,r){e?this.data=e:n?(this.data=new n(t.x*t.y),n===Array&&r&&a.a.init(this.data,0)):(this.data=new Uint8Array(t.x*t.y),Uint8Array===Array&&r&&a.a.init(this.data,0)),this.size=t}var o=n(53),i=n(19),a=n(3),u={clone:n(7)};r.prototype.inImageWithBorder=function(t,e){return t.x>=e&&t.y>=e&&t.x<this.size.x-e&&t.y<this.size.y-e},r.sample=function(t,e,n){var r=Math.floor(e),o=Math.floor(n),i=t.size.x,a=o*t.size.x+r,u=t.data[a+0],c=t.data[a+1],s=t.data[a+i],f=t.data[a+i+1],l=u-c;return e-=r,n-=o,Math.floor(e*(n*(l-s+f)-l)+n*(s-u)+u)},r.clearArray=function(t){for(var e=t.length;e--;)t[e]=0},r.prototype.subImage=function(t,e){return new o.a(t,e,this)},r.prototype.subImageAsCopy=function(t,e){var n,r,o=t.size.y,i=t.size.x;for(n=0;n<i;n++)for(r=0;r<o;r++)t.data[r*i+n]=this.data[(e.y+r)*this.size.x+e.x+n]},r.prototype.copyTo=function(t){for(var e=this.data.length,n=this.data,r=t.data;e--;)r[e]=n[e]},r.prototype.get=function(t,e){return this.data[e*this.size.x+t]},r.prototype.getSafe=function(t,e){var n;if(!this.indexMapping){for(this.indexMapping={x:[],y:[]},n=0;n<this.size.x;n++)this.indexMapping.x[n]=n,this.indexMapping.x[n+this.size.x]=n;for(n=0;n<this.size.y;n++)this.indexMapping.y[n]=n,this.indexMapping.y[n+this.size.y]=n}return this.data[this.indexMapping.y[e+this.size.y]*this.size.x+this.indexMapping.x[t+this.size.x]]},r.prototype.set=function(t,e,n){return this.data[e*this.size.x+t]=n,this},r.prototype.zeroBorder=function(){var t,e=this.size.x,n=this.size.y,r=this.data;for(t=0;t<e;t++)r[t]=r[(n-1)*e+t]=0;for(t=1;t<n-1;t++)r[t*e]=r[t*e+(e-1)]=0},r.prototype.invert=function(){for(var t=this.data,e=t.length;e--;)t[e]=t[e]?0:1},r.prototype.convolve=function(t){var e,n,r,o,i=t.length/2|0,a=0;for(n=0;n<this.size.y;n++)for(e=0;e<this.size.x;e++){for(a=0,o=-i;o<=i;o++)for(r=-i;r<=i;r++)a+=t[o+i][r+i]*this.getSafe(e+r,n+o);this.data[n*this.size.x+e]=a}},r.prototype.moments=function(t){var e,n,r,o,i,a,c,s,f,l,d,h,p=this.data,v=this.size.y,_=this.size.x,g=[],y=[],m=Math.PI,x=m/4;if(t<=0)return y;for(i=0;i<t;i++)g[i]={m00:0,m01:0,m10:0,m11:0,m02:0,m20:0,theta:0,rad:0};for(n=0;n<v;n++)for(o=n*n,e=0;e<_;e++)(r=p[n*_+e])>0&&(a=g[r-1],a.m00+=1,a.m01+=n,a.m10+=e,a.m11+=e*n,a.m02+=o,a.m20+=e*e);for(i=0;i<t;i++)a=g[i],isNaN(a.m00)||0===a.m00||(l=a.m10/a.m00,d=a.m01/a.m00,c=a.m11/a.m00-l*d,s=a.m02/a.m00-d*d,f=a.m20/a.m00-l*l,h=(s-f)/(2*c),h=.5*Math.atan(h)+(c>=0?x:-x)+m,a.theta=(180*h/m+90)%180-90,a.theta<0&&(a.theta+=180),a.rad=h>m?h-m:h,a.vec=u.clone([Math.cos(h),Math.sin(h)]),y.push(a));return y},r.prototype.show=function(t,e){var n,r,o,i,a,u,c;for(e||(e=1),n=t.getContext(\"2d\"),t.width=this.size.x,t.height=this.size.y,r=n.getImageData(0,0,t.width,t.height),o=r.data,i=0,c=0;c<this.size.y;c++)for(u=0;u<this.size.x;u++)a=c*this.size.x+u,i=this.get(u,c)*e,o[4*a+0]=i,o[4*a+1]=i,o[4*a+2]=i,o[4*a+3]=255;n.putImageData(r,0,0)},r.prototype.overlay=function(t,e,r){(!e||e<0||e>360)&&(e=360);for(var o=[0,1,1],a=[0,0,0],u=[255,255,255],c=[0,0,0],s=[],f=t.getContext(\"2d\"),l=f.getImageData(r.x,r.y,this.size.x,this.size.y),d=l.data,h=this.data.length;h--;)o[0]=this.data[h]*e,s=o[0]<=0?u:o[0]>=360?c:n.i(i.a)(o,a),d[4*h+0]=s[0],d[4*h+1]=s[1],d[4*h+2]=s[2],d[4*h+3]=255;f.putImageData(l,r.x,r.y)},e.a=r},function(t,e,n){function r(t,e,n){\"__proto__\"==e&&o?o(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}var o=n(37);t.exports=r},function(t,e,n){function r(t,e){var n=i(t,e);return o(n)?n:void 0}var o=n(97),i=n(120);t.exports=r},function(t,e,n){function r(t){if(\"string\"==typeof t||o(t))return t;var e=t+\"\";return\"0\"==e&&1/t==-i?\"-0\":e}var o=n(27),i=1/0;t.exports=r},function(t,e,n){function r(t){return null!=t&&i(t.length)&&!o(t)}var o=n(25),i=n(26);t.exports=r},function(t,e,n){function r(t){if(!i(t))return!1;var e=o(t);return e==u||e==c||e==a||e==s}var o=n(8),i=n(0),a=\"[object AsyncFunction]\",u=\"[object Function]\",c=\"[object GeneratorFunction]\",s=\"[object Proxy]\";t.exports=r},function(t,e){function n(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=r}var r=9007199254740991;t.exports=n},function(t,e,n){function r(t){return\"symbol\"==typeof t||i(t)&&o(t)==a}var o=n(8),i=n(6),a=\"[object Symbol]\";t.exports=r},function(t,e,n){var r=n(100),o=n(116),i=o(function(t,e,n){r(t,e,n)});t.exports=i},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,\"loaded\",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,\"id\",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,n){\"use strict\";var r={searchDirections:[[0,1],[1,1],[1,0],[1,-1],[0,-1],[-1,-1],[-1,0],[-1,1]],create:function(t,e){function n(t,e,n,r){var o,f,l;for(o=0;o<7;o++){if(f=t.cy+c[t.dir][0],l=t.cx+c[t.dir][1],i=f*s+l,a[i]===e&&(0===u[i]||u[i]===n))return u[i]=n,t.cy=f,t.cx=l,!0;0===u[i]&&(u[i]=r),t.dir=(t.dir+1)%8}return!1}function r(t,e,n){return{dir:n,x:t,y:e,next:null,prev:null}}function o(t,e,o,i,a){var u,c,s,f=null,l={cx:e,cy:t,dir:0};if(n(l,i,o,a)){f=r(e,t,l.dir),u=f,s=l.dir,c=r(l.cx,l.cy,0),c.prev=u,u.next=c,c.next=null,u=c;do l.dir=(l.dir+6)%8,n(l,i,o,a),s!==l.dir?(u.dir=l.dir,c=r(l.cx,l.cy,0),c.prev=u,u.next=c,c.next=null,u=c):(u.dir=s,u.x=l.cx,u.y=l.cy),s=l.dir;while(l.cx!==e||l.cy!==t);f.prev=u.prev,u.prev.next=f}return f}var i,a=t.data,u=e.data,c=this.searchDirections,s=t.size.x;return{trace:function(t,e,r,o){return n(t,e,r,o)},contourTracing:function(t,e,n,r,i){return o(t,e,n,r,i)}}}};e.a=r},function(t,e,n){\"use strict\";function r(){o.a.call(this)}var o=n(1),i=n(3),a={ALPHABETH_STRING:{value:\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. *$/+%\"},ALPHABET:{value:[48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,46,32,42,36,47,43,37]},CHARACTER_ENCODINGS:{value:[52,289,97,352,49,304,112,37,292,100,265,73,328,25,280,88,13,268,76,28,259,67,322,19,274,82,7,262,70,22,385,193,448,145,400,208,133,388,196,148,168,162,138,42]},ASTERISK:{value:148},FORMAT:{value:\"code_39\",writeable:!1}};r.prototype=Object.create(o.a.prototype,a),r.prototype.constructor=r,r.prototype._decode=function(){var t,e,n,r,o=this,a=[0,0,0,0,0,0,0,0,0],u=[],c=o._findStart();if(!c)return null;r=o._nextSet(o._row,c.end);do{if(a=o._toCounters(r,a),(n=o._toPattern(a))<0)return null;if((t=o._patternToChar(n))<0)return null;u.push(t),e=r,r+=i.a.sum(a),r=o._nextSet(o._row,r)}while(\"*\"!==t);return u.pop(),u.length&&o._verifyTrailingWhitespace(e,r,a)?{code:u.join(\"\"),start:c.start,end:r,startInfo:c,decodedCodes:u}:null},r.prototype._verifyTrailingWhitespace=function(t,e,n){var r=i.a.sum(n);return 3*(e-t-r)>=r},r.prototype._patternToChar=function(t){var e,n=this;for(e=0;e<n.CHARACTER_ENCODINGS.length;e++)if(n.CHARACTER_ENCODINGS[e]===t)return String.fromCharCode(n.ALPHABET[e]);return-1},r.prototype._findNextWidth=function(t,e){var n,r=Number.MAX_VALUE;for(n=0;n<t.length;n++)t[n]<r&&t[n]>e&&(r=t[n]);return r},r.prototype._toPattern=function(t){for(var e,n,r=t.length,o=0,i=r,a=0,u=this;i>3;){for(o=u._findNextWidth(t,o),i=0,e=0,n=0;n<r;n++)t[n]>o&&(e|=1<<r-1-n,i++,a+=t[n]);if(3===i){for(n=0;n<r&&i>0;n++)if(t[n]>o&&(i--,2*t[n]>=a))return-1;return e}}return-1},r.prototype._findStart=function(){var t,e,n,r=this,o=r._nextSet(r._row),i=o,a=[0,0,0,0,0,0,0,0,0],u=0,c=!1;for(t=o;t<r._row.length;t++)if(r._row[t]^c)a[u]++;else{if(u===a.length-1){if(r._toPattern(a)===r.ASTERISK&&(n=Math.floor(Math.max(0,i-(t-i)/4)),r._matchRange(n,i,0)))return{start:i,end:t};for(i+=a[0]+a[1],e=0;e<7;e++)a[e]=a[e+2];a[7]=0,a[8]=0,u--}else u++;a[u]=1,c=!c}return null},e.a=r},function(t,e){function n(t,e){return t[0]*e[0]+t[1]*e[1]}t.exports=n},function(t,e,n){var r=n(22),o=n(5),i=r(o,\"Map\");t.exports=i},function(t,e,n){function r(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}var o=n(138),i=n(139),a=n(140),u=n(141),c=n(142);r.prototype.clear=o,r.prototype.delete=i,r.prototype.get=a,r.prototype.has=u,r.prototype.set=c,t.exports=r},function(t,e,n){function r(t,e,n){(void 0===n||i(t[e],n))&&(void 0!==n||e in t)||o(t,e,n)}var o=n(21),i=n(17);t.exports=r},function(t,e,n){function r(t,e,n){var r=t[e];u.call(t,e)&&i(r,n)&&(void 0!==n||e in t)||o(t,e,n)}var o=n(21),i=n(17),a=Object.prototype,u=a.hasOwnProperty;t.exports=r},function(t,e,n){var r=n(22),o=function(){try{var t=r(Object,\"defineProperty\");return t({},\"\",{}),t}catch(t){}}();t.exports=o},function(t,e,n){(function(e){var n=\"object\"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(e,n(47))},function(t,e,n){var r=n(147),o=r(Object.getPrototypeOf,Object);t.exports=o},function(t,e){function n(t){var e=t&&t.constructor;return t===(\"function\"==typeof e&&e.prototype||r)}var r=Object.prototype;t.exports=n},function(t,e,n){function r(t,e,n){return e=i(void 0===e?t.length-1:e,0),function(){for(var r=arguments,a=-1,u=i(r.length-e,0),c=Array(u);++a<u;)c[a]=r[e+a];a=-1;for(var s=Array(e+1);++a<e;)s[a]=r[a];return s[e]=n(c),o(t,this,s)}}var o=n(87),i=Math.max;t.exports=r},function(t,e,n){var r=n(106),o=n(148),i=o(r);t.exports=i},function(t,e){function n(t){return t}t.exports=n},function(t,e,n){(function(t){var r=n(5),o=n(163),i=\"object\"==typeof e&&e&&!e.nodeType&&e,a=i&&\"object\"==typeof t&&t&&!t.nodeType&&t,u=a&&a.exports===i,c=u?r.Buffer:void 0,s=c?c.isBuffer:void 0,f=s||o;t.exports=f}).call(e,n(29)(t))},function(t,e,n){var r=n(98),o=n(109),i=n(145),a=i&&i.isTypedArray,u=a?o(a):r;t.exports=u},function(t,e,n){function r(t){return a(t)?o(t,!0):i(t)}var o=n(88),i=n(99),a=n(24);t.exports=r},function(t,e){var n;n=function(){return this}();try{n=n||Function(\"return this\")()||(0,eval)(\"this\")}catch(t){\"object\"==typeof window&&(n=window)}t.exports=n},function(e,n,r){\"use strict\";function o(t){f(t),P=k.a.create($.decoder,S)}function i(t){var e;if(\"VideoStream\"===$.inputStream.type)e=document.createElement(\"video\"),R=H.a.createVideoStream(e);else if(\"ImageStream\"===$.inputStream.type)R=H.a.createImageStream();else if(\"LiveStream\"===$.inputStream.type){var n=a();n&&((e=n.querySelector(\"video\"))||(e=document.createElement(\"video\"),n.appendChild(e))),R=H.a.createLiveStream(e),F.a.request(e,$.inputStream.constraints).then(function(){R.trigger(\"canrecord\")}).catch(function(e){return t(e)})}R.setAttribute(\"preload\",\"auto\"),R.setInputStream($.inputStream),R.addEventListener(\"canrecord\",u.bind(void 0,t))}function a(){var t=$.inputStream.target;if(t&&t.nodeName&&1===t.nodeType)return t;var e=\"string\"==typeof t?t:\"#interactive.viewport\";return document.querySelector(e)}function u(t){U.a.checkImageConstraints(R,$.locator),s($),w=V.a.create(R,K.dom.image),A($.numOfWorkers,function(){0===$.numOfWorkers&&o(),c(t)})}function c(t){R.play(),t()}function s(){if(\"undefined\"!=typeof document){var t=a();if(K.dom.image=document.querySelector(\"canvas.imgBuffer\"),K.dom.image||(K.dom.image=document.createElement(\"canvas\"),K.dom.image.className=\"imgBuffer\",t&&\"ImageStream\"===$.inputStream.type&&t.appendChild(K.dom.image)),K.ctx.image=K.dom.image.getContext(\"2d\"),K.dom.image.width=R.getCanvasSize().x,K.dom.image.height=R.getCanvasSize().y,K.dom.overlay=document.querySelector(\"canvas.drawingBuffer\"),!K.dom.overlay){K.dom.overlay=document.createElement(\"canvas\"),K.dom.overlay.className=\"drawingBuffer\",t&&t.appendChild(K.dom.overlay);var e=document.createElement(\"br\");e.setAttribute(\"clear\",\"all\"),t&&t.appendChild(e)}K.ctx.overlay=K.dom.overlay.getContext(\"2d\"),K.dom.overlay.width=R.getCanvasSize().x,K.dom.overlay.height=R.getCanvasSize().y}}function f(t){S=t?t:new j.a({x:R.getWidth(),y:R.getHeight()}),D=[q.clone([0,0]),q.clone([0,S.size.y]),q.clone([S.size.x,S.size.y]),q.clone([S.size.x,0])],U.a.init(S,$.locator)}function l(){return $.locate?U.a.locate():[[q.clone(D[0]),q.clone(D[1]),q.clone(D[2]),q.clone(D[3])]]}function d(t){function e(t){for(var e=t.length;e--;)t[e][0]+=i,t[e][1]+=a}function n(t){t[0].x+=i,t[0].y+=a,t[1].x+=i,t[1].y+=a}var r,o=R.getTopRight(),i=o.x,a=o.y;if(0!==i||0!==a){if(t.barcodes)for(r=0;r<t.barcodes.length;r++)d(t.barcodes[r]);if(t.line&&2===t.line.length&&n(t.line),t.box&&e(t.box),t.boxes&&t.boxes.length>0)for(r=0;r<t.boxes.length;r++)e(t.boxes[r])}}function h(t,e){e&&I&&(t.barcodes?t.barcodes.filter(function(t){return t.codeResult}).forEach(function(t){return h(t,e)}):t.codeResult&&I.addResult(e,R.getCanvasSize(),t.codeResult))}function p(t){return t&&(t.barcodes?t.barcodes.some(function(t){return t.codeResult}):t.codeResult)}function v(t,e){var n=t;t&&Q&&(d(t),h(t,e),n=t.barcodes||t),L.a.publish(\"processed\",n),p(t)&&L.a.publish(\"detected\",n)}function _(){var t,e;e=l(),e?(t=P.decodeFromBoundingBoxes(e),t=t||{},t.boxes=e,v(t,S.data)):v()}function g(){var t;if(Q){if(Y.length>0){if(!(t=Y.filter(function(t){return!t.busy})[0]))return;w.attachData(t.imageData)}else w.attachData(S.data);w.grab()&&(t?(t.busy=!0,t.worker.postMessage({cmd:\"process\",imageData:t.imageData},[t.imageData.buffer])):_())}else _()}function y(){var t=null,e=1e3/($.frequency||60);T=!1,function n(r){t=t||r,T||(r>=t&&(t+=e,g()),window.requestAnimFrame(n))}(performance.now())}function m(){Q&&\"LiveStream\"===$.inputStream.type?y():g()}function x(t){var e,n={worker:void 0,imageData:new Uint8Array(R.getWidth()*R.getHeight()),busy:!0};e=C(),n.worker=new Worker(e),n.worker.onmessage=function(r){if(\"initialized\"===r.data.event)return URL.revokeObjectURL(e),n.busy=!1,n.imageData=new Uint8Array(r.data.imageData),t(n);\"processed\"===r.data.event?(n.imageData=new Uint8Array(r.data.imageData),n.busy=!1,v(r.data.result,n.imageData)):r.data.event},n.worker.postMessage({cmd:\"init\",size:{x:R.getWidth(),y:R.getHeight()},imageData:n.imageData,config:b($)},[n.imageData.buffer])}function b(t){return X({},t,{inputStream:X({},t.inputStream,{target:null})})}function E(t){function e(t){self.postMessage({event:\"processed\",imageData:o.data,result:t},[o.data.buffer])}function n(){self.postMessage({event:\"initialized\",imageData:o.data},[o.data.buffer])}if(t){var r=t().default;if(!r)return void self.postMessage({event:\"error\",message:\"Quagga could not be created\"})}var o;self.onmessage=function(t){if(\"init\"===t.data.cmd){var i=t.data.config;i.numOfWorkers=0,o=new r.ImageWrapper({x:t.data.size.x,y:t.data.size.y},new Uint8Array(t.data.imageData)),r.init(i,n,o),r.onProcessed(e)}else\"process\"===t.data.cmd?(o.data=new Uint8Array(t.data.imageData),r.start()):\"setReaders\"===t.data.cmd&&r.setReaders(t.data.readers)}}function C(){var e,n;return void 0!==t&&(n=t),e=new Blob([\"(\"+E.toString()+\")(\"+n+\");\"],{type:\"text/javascript\"}),window.URL.createObjectURL(e)}function O(t){P?P.setReaders(t):Q&&Y.length>0&&Y.forEach(function(e){e.worker.postMessage({cmd:\"setReaders\",readers:t})})}function A(t,e){var n=t-Y.length;if(0===n)return e&&e();if(n<0){return Y.slice(n).forEach(function(t){t.worker.terminate()}),Y=Y.slice(0,n),e&&e()}for(var r=function(n){Y.push(n),Y.length>=t&&e&&e()},o=0;o<n;o++)x(r)}Object.defineProperty(n,\"__esModule\",{value:!0});var R,w,T,S,D,P,I,M=r(28),N=r.n(M),z=r(54),j=(r.n(z),r(20)),U=r(64),k=r(57),L=r(51),F=r(59),W=r(9),B=r(49),G=r(55),H=r(63),V=r(61),X=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},q={clone:r(7)},K={ctx:{image:null,overlay:null},dom:{image:null,overlay:null}},Y=[],Q=!0,$={};n.default={init:function(t,e,n){if($=N()({},G.a,t),n)return Q=!1,o(n),e();i(e)},start:function(){m()},stop:function(){T=!0,A(0),\"LiveStream\"===$.inputStream.type&&(F.a.release(),R.clearEventHandlers())},pause:function(){T=!0},onDetected:function(t){L.a.subscribe(\"detected\",t)},offDetected:function(t){L.a.unsubscribe(\"detected\",t)},onProcessed:function(t){L.a.subscribe(\"processed\",t)},offProcessed:function(t){L.a.unsubscribe(\"processed\",t)},setReaders:function(t){O(t)},registerResultCollector:function(t){t&&\"function\"==typeof t.addResult&&(I=t)},canvas:K,decodeSingle:function(t,e){var n=this;t=N()({inputStream:{type:\"ImageStream\",sequence:!1,size:800,src:t.src},numOfWorkers:1,locator:{halfSample:!1}},t),this.init(t,function(){L.a.once(\"processed\",function(t){n.stop(),e.call(null,t)},!0),m()})},ImageWrapper:j.a,ImageDebug:W.a,ResultCollector:B.a,CameraAccess:F.a}},function(t,e,n){\"use strict\";function r(t,e){return!!e&&e.some(function(e){return Object.keys(e).every(function(n){return e[n]===t[n]})})}function o(t,e){return\"function\"!=typeof e||e(t)}var i=n(9);e.a={create:function(t){function e(e){return c&&e&&!r(e,t.blacklist)&&o(e,t.filter)}var n=document.createElement(\"canvas\"),a=n.getContext(\"2d\"),u=[],c=t.capacity||20,s=t.capture===!0;return{addResult:function(t,r,o){var f={};e(o)&&(c--,f.codeResult=o,s&&(n.width=r.x,n.height=r.y,i.a.drawImage(t,r,a),f.frame=n.toDataURL()),u.push(f))},getResults:function(){return u}}}}},function(t,e,n){\"use strict\";var r={clone:n(7),dot:n(32)};e.a={create:function(t,e){function n(){o(t),i()}function o(t){c[t.id]=t,a.push(t)}function i(){var t,e=0;for(t=0;t<a.length;t++)e+=a[t].rad;u.rad=e/a.length,u.vec=r.clone([Math.cos(u.rad),Math.sin(u.rad)])}var a=[],u={rad:0,vec:r.clone([0,0])},c={};return n(),{add:function(t){c[t.id]||(o(t),i())},fits:function(t){return Math.abs(r.dot(t.point.vec,u.vec))>e},getPoints:function(){return a},getCenter:function(){return u}}},createPoint:function(t,e,n){return{rad:t[n],point:t,id:e}}}},function(t,e,n){\"use strict\";e.a=function(){function t(t){return o[t]||(o[t]={subscribers:[]}),o[t]}function e(){o={}}function n(t,e){t.async?setTimeout(function(){t.callback(e)},4):t.callback(e)}function r(e,n,r){var o;if(\"function\"==typeof n)o={callback:n,async:r};else if(o=n,!o.callback)throw\"Callback was not specified on options\";t(e).subscribers.push(o)}var o={};return{subscribe:function(t,e,n){return r(t,e,n)},publish:function(e,r){var o=t(e),i=o.subscribers;i.filter(function(t){return!!t.once}).forEach(function(t){n(t,r)}),o.subscribers=i.filter(function(t){return!t.once}),o.subscribers.forEach(function(t){n(t,r)})},once:function(t,e,n){r(t,{callback:e,async:n,once:!0})},unsubscribe:function(n,r){var o;n?(o=t(n),o.subscribers=o&&r?o.subscribers.filter(function(t){return t.callback!==r}):[]):e()}}}()},function(t,e,n){\"use strict\";function r(){return navigator.mediaDevices&&\"function\"==typeof navigator.mediaDevices.enumerateDevices?navigator.mediaDevices.enumerateDevices():Promise.reject(new Error(\"enumerateDevices is not defined\"))}function o(t){return navigator.mediaDevices&&\"function\"==typeof navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia(t):Promise.reject(new Error(\"getUserMedia is not defined\"))}e.b=r,e.a=o},function(t,e,n){\"use strict\";function r(t,e,n){n||(n={data:null,size:e}),this.data=n.data,this.originalSize=n.size,this.I=n,this.from=t,this.size=e}r.prototype.show=function(t,e){var n,r,o,i,a,u,c;for(e||(e=1),n=t.getContext(\"2d\"),t.width=this.size.x,t.height=this.size.y,r=n.getImageData(0,0,t.width,t.height),o=r.data,i=0,a=0;a<this.size.y;a++)for(u=0;u<this.size.x;u++)c=a*this.size.x+u,i=this.get(u,a)*e,o[4*c+0]=i,o[4*c+1]=i,o[4*c+2]=i,o[4*c+3]=255;r.data=o,n.putImageData(r,0,0)},r.prototype.get=function(t,e){return this.data[(this.from.y+e)*this.originalSize.x+this.from.x+t]},r.prototype.updateData=function(t){this.originalSize=t.size,this.data=t.data},r.prototype.updateFrom=function(t){return this.from=t,this},e.a=r},function(t,e){\"undefined\"!=typeof window&&(window.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){window.setTimeout(t,1e3/60)}}()),Math.imul=Math.imul||function(t,e){var n=t>>>16&65535,r=65535&t,o=e>>>16&65535,i=65535&e;return r*i+(n*i+r*o<<16>>>0)|0},\"function\"!=typeof Object.assign&&(Object.assign=function(t){\"use strict\";if(null===t)throw new TypeError(\"Cannot convert undefined or null to object\");for(var e=Object(t),n=1;n<arguments.length;n++){var r=arguments[n];if(null!==r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e})},function(t,e,n){\"use strict\";var r=void 0;r=n(56),e.a=r},function(t,e){t.exports={inputStream:{name:\"Live\",type:\"LiveStream\",constraints:{width:640,height:480,facingMode:\"environment\"},area:{top:\"0%\",right:\"0%\",left:\"0%\",bottom:\"0%\"},singleChannel:!1},locate:!0,numOfWorkers:4,decoder:{readers:[\"code_128_reader\"]},locator:{halfSample:!0,patchSize:\"medium\"}}},function(t,e,n){\"use strict\";var r=n(58),o=(n(9),n(69)),i=n(4),a=n(31),u=n(70),c=n(68),s=n(77),f=n(74),l=n(72),d=n(73),h=n(76),p=n(75),v=n(67),_=n(71),g=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},y={code_128_reader:o.a,ean_reader:i.a,ean_5_reader:d.a,ean_2_reader:l.a,ean_8_reader:f.a,code_39_reader:a.a,code_39_vin_reader:u.a,codabar_reader:c.a,upc_reader:s.a,upc_e_reader:h.a,i2of5_reader:p.a,\"2of5_reader\":v.a,code_93_reader:_.a};e.a={create:function(t,e){function n(){}function o(){t.readers.forEach(function(t){var e,n={},r=[];\"object\"===(void 0===t?\"undefined\":g(t))?(e=t.format,n=t.config):\"string\"==typeof t&&(e=t),n.supplements&&(r=n.supplements.map(function(t){return new y[t]})),h.push(new y[e](n,r))})}function i(){}function a(t,n,r){function o(e){var r={y:e*Math.sin(n),x:e*Math.cos(n)};t[0].y-=r.y,t[0].x-=r.x,t[1].y+=r.y,t[1].x+=r.x}for(o(r);r>1&&(!e.inImageWithBorder(t[0],0)||!e.inImageWithBorder(t[1],0));)r-=Math.ceil(r/2),o(-r);return t}function u(t){return[{x:(t[1][0]-t[0][0])/2+t[0][0],y:(t[1][1]-t[0][1])/2+t[0][1]},{x:(t[3][0]-t[2][0])/2+t[2][0],y:(t[3][1]-t[2][1])/2+t[2][1]}]}function c(t){var n,o=null,i=r.a.getBarcodeLine(e,t[0],t[1]);for(r.a.toBinaryLine(i),n=0;n<h.length&&null===o;n++)o=h[n].decodePattern(i.line);return null===o?null:{codeResult:o,barcodeLine:i}}function s(t,e,n){var r,o,i,a=Math.sqrt(Math.pow(t[1][0]-t[0][0],2)+Math.pow(t[1][1]-t[0][1],2)),u=16,s=null,f=Math.sin(n),l=Math.cos(n);for(r=1;r<u&&null===s;r++)o=a/u*r*(r%2==0?-1:1),i={y:o*f,x:o*l},e[0].y+=i.x,e[0].x-=i.y,e[1].y+=i.x,e[1].x-=i.y,s=c(e);return s}function f(t){return Math.sqrt(Math.pow(Math.abs(t[1].y-t[0].y),2)+Math.pow(Math.abs(t[1].x-t[0].x),2))}function l(t){var e,n,r,o;d.ctx.overlay;return e=u(t),o=f(e),n=Math.atan2(e[1].y-e[0].y,e[1].x-e[0].x),null===(e=a(e,n,Math.floor(.1*o)))?null:(r=c(e),null===r&&(r=s(t,e,n)),null===r?null:{codeResult:r.codeResult,line:e,angle:n,pattern:r.barcodeLine.line,threshold:r.barcodeLine.threshold})}var d={ctx:{frequency:null,pattern:null,overlay:null},dom:{frequency:null,pattern:null,overlay:null}},h=[];return n(),o(),i(),{decodeFromBoundingBox:function(t){return l(t)},decodeFromBoundingBoxes:function(e){var n,r,o=[],i=t.multiple;for(n=0;n<e.length;n++){var a=e[n];if(r=l(a)||{},r.box=a,i)o.push(r);else if(r.codeResult)return r}if(i)return{barcodes:o}},setReaders:function(e){t.readers=e,h.length=0,o()}}}}},function(t,e,n){\"use strict\";var r=(n(20),{}),o={DIR:{UP:1,DOWN:-1}};r.getBarcodeLine=function(t,e,n){function r(t,e){l=y[e*m+t],x+=l,b=l<b?l:b,E=l>E?l:E,g.push(l)}var o,i,a,u,c,s,f,l,d=0|e.x,h=0|e.y,p=0|n.x,v=0|n.y,_=Math.abs(v-h)>Math.abs(p-d),g=[],y=t.data,m=t.size.x,x=0,b=255,E=0;for(_&&(s=d,d=h,h=s,s=p,p=v,v=s),d>p&&(s=d,d=p,p=s,s=h,h=v,v=s),o=p-d,i=Math.abs(v-h),a=o/2|0,c=h,u=h<v?1:-1,f=d;f<p;f++)_?r(c,f):r(f,c),(a-=i)<0&&(c+=u,a+=o);return{line:g,min:b,max:E}},r.toBinaryLine=function(t){var e,n,r,i,a,u,c=t.min,s=t.max,f=t.line,l=c+(s-c)/2,d=[],h=(s-c)/12,p=-h;for(r=f[0]>l?o.DIR.UP:o.DIR.DOWN,d.push({pos:0,val:f[0]}),a=0;a<f.length-2;a++)e=f[a+1]-f[a],n=f[a+2]-f[a+1],i=e+n<p&&f[a+1]<1.5*l?o.DIR.DOWN:e+n>h&&f[a+1]>.5*l?o.DIR.UP:r,r!==i&&(d.push({pos:a,val:f[a]}),r=i);for(d.push({pos:f.length,val:f[f.length-1]}),u=d[0].pos;u<d[1].pos;u++)f[u]=f[u]>l?0:1;for(a=1;a<d.length-1;a++)for(h=d[a+1].val>d[a].val?d[a].val+(d[a+1].val-d[a].val)/3*2|0:d[a+1].val+(d[a].val-d[a+1].val)/3|0,u=d[a].pos;u<d[a+1].pos;u++)f[u]=f[u]>h?0:1;return{line:f,threshold:h}},r.debug={printFrequency:function(t,e){var n,r=e.getContext(\"2d\");for(e.width=t.length,e.height=256,r.beginPath(),r.strokeStyle=\"blue\",n=0;n<t.length;n++)r.moveTo(n,255),r.lineTo(n,255-t[n]);r.stroke(),r.closePath()},printPattern:function(t,e){var n,r=e.getContext(\"2d\");for(e.width=t.length,r.fillColor=\"black\",n=0;n<t.length;n++)1===t[n]&&r.fillRect(n,0,1,100)}},e.a=r},function(t,e,n){\"use strict\";function r(t){return new Promise(function(e,n){function r(){o>0?t.videoWidth>10&&t.videoHeight>10?e():window.setTimeout(r,500):n(\"Unable to play video stream. Is webcam working?\"),o--}var o=10;r()})}function o(t,e){return n.i(d.a)(e).then(function(e){return new Promise(function(n){s=e,t.setAttribute(\"autoplay\",!0),t.setAttribute(\"muted\",!0),t.setAttribute(\"playsinline\",!0),t.srcObject=e,t.addEventListener(\"loadedmetadata\",function(){t.play(),n()})})}).then(r.bind(null,t))}function i(t){var e=l()(t,[\"width\",\"height\",\"facingMode\",\"aspectRatio\",\"deviceId\"]);return void 0!==t.minAspectRatio&&t.minAspectRatio>0&&(e.aspectRatio=t.minAspectRatio,console.log(\"WARNING: Constraint 'minAspectRatio' is deprecated; Use 'aspectRatio' instead\")),void 0!==t.facing&&(e.facingMode=t.facing,console.log(\"WARNING: Constraint 'facing' is deprecated. Use 'facingMode' instead'\")),e}function a(t){var e={audio:!1,video:i(t)};return e.video.deviceId&&e.video.facingMode&&delete e.video.facingMode,Promise.resolve(e)}function u(){return n.i(d.b)().then(function(t){return t.filter(function(t){return\"videoinput\"===t.kind})})}function c(){if(s){var t=s.getVideoTracks();if(t&&t.length)return t[0]}}var s,f=n(162),l=n.n(f),d=n(52);e.a={request:function(t,e){return a(e).then(o.bind(null,t))},release:function(){var t=s&&s.getVideoTracks();t&&t.length&&t[0].stop(),s=null},enumerateVideoDevices:u,getActiveStreamLabel:function(){var t=c();return t?t.label:\"\"},getActiveTrack:c}},function(t,e,n){\"use strict\";function r(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:d;return/^blob\\:/i.test(t)?i(t).then(o).then(function(t){return a(t,e)}):Promise.resolve(null)}function o(t){return new Promise(function(e){var n=new FileReader;n.onload=function(t){return e(t.target.result)},n.readAsArrayBuffer(t)})}function i(t){return new Promise(function(e,n){var r=new XMLHttpRequest;r.open(\"GET\",t,!0),r.responseType=\"blob\",r.onreadystatechange=function(){r.readyState!==XMLHttpRequest.DONE||200!==r.status&&0!==r.status||e(this.response)},r.onerror=n,r.send()})}function a(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:d,n=new DataView(t),r=t.byteLength,o=e.reduce(function(t,e){var n=Object.keys(l).filter(function(t){return l[t]===e})[0];return n&&(t[n]=e),t},{}),i=2;if(255!==n.getUint8(0)||216!==n.getUint8(1))return!1;for(;i<r;){if(255!==n.getUint8(i))return!1;if(225===n.getUint8(i+1))return u(n,i+4,o);i+=2+n.getUint16(i+2)}}function u(t,e,n){if(\"Exif\"!==f(t,e,4))return!1;var r=e+6,o=void 0;if(18761===t.getUint16(r))o=!1;else{if(19789!==t.getUint16(r))return!1;o=!0}if(42!==t.getUint16(r+2,!o))return!1;var i=t.getUint32(r+4,!o);return!(i<8)&&c(t,r,r+i,n,o)}function c(t,e,n,r,o){for(var i=t.getUint16(n,!o),a={},u=0;u<i;u++){var c=n+12*u+2,f=r[t.getUint16(c,!o)];f&&(a[f]=s(t,c,e,n,o))}return a}function s(t,e,n,r,o){var i=t.getUint16(e+2,!o),a=t.getUint32(e+4,!o);switch(i){case 3:if(1===a)return t.getUint16(e+8,!o)}}function f(t,e,n){for(var r=\"\",o=e;o<e+n;o++)r+=String.fromCharCode(t.getUint8(o));return r}e.a=r;var l={274:\"orientation\"},d=Object.keys(l).map(function(t){return l[t]})},function(t,e,n){\"use strict\";function r(t,e){t.width!==e.x&&(t.width=e.x),t.height!==e.y&&(t.height=e.y)}var o=n(19),i=Math.PI/180,a={};a.create=function(t,e){var a,u={},c=t.getConfig(),s=(n.i(o.b)(t.getRealWidth(),t.getRealHeight()),t.getCanvasSize()),f=n.i(o.b)(t.getWidth(),t.getHeight()),l=t.getTopRight(),d=l.x,h=l.y,p=null,v=null;return a=e?e:document.createElement(\"canvas\"),a.width=s.x,a.height=s.y,p=a.getContext(\"2d\"),v=new Uint8Array(f.x*f.y),u.attachData=function(t){v=t},u.getData=function(){return v},u.grab=function(){var e,u=c.halfSample,l=t.getFrame(),_=l,g=0;if(_){if(r(a,s),\"ImageStream\"===c.type&&(_=l.img,l.tags&&l.tags.orientation))switch(l.tags.orientation){case 6:g=90*i;break;case 8:g=-90*i}return 0!==g?(p.translate(s.x/2,s.y/2),p.rotate(g),p.drawImage(_,-s.y/2,-s.x/2,s.y,s.x),p.rotate(-g),p.translate(-s.x/2,-s.y/2)):p.drawImage(_,0,0,s.x,s.y),e=p.getImageData(d,h,f.x,f.y).data,u?n.i(o.c)(e,f,v):n.i(o.d)(e,v,c),!0}return!1},u.getSize=function(){return f},u},e.a=a},function(t,e,n){\"use strict\";function r(t,e){t.onload=function(){e.loaded(this)}}var o=n(60),i={};i.load=function(t,e,i,a,u){var c,s,f,l=new Array(a),d=new Array(l.length);if(u===!1)l[0]=t;else for(c=0;c<l.length;c++)f=i+c,l[c]=t+\"image-\"+(\"00\"+f).slice(-3)+\".jpg\";for(d.notLoaded=[],d.addImage=function(t){d.notLoaded.push(t)},d.loaded=function(r){for(var i=d.notLoaded,a=0;a<i.length;a++)if(i[a]===r){i.splice(a,1);for(var c=0;c<l.length;c++){var s=l[c].substr(l[c].lastIndexOf(\"/\"));if(r.src.lastIndexOf(s)!==-1){d[c]={img:r};break}}break}0===i.length&&(u===!1?n.i(o.a)(t,[\"orientation\"]).then(function(t){d[0].tags=t,e(d)}).catch(function(t){console.log(t),e(d)}):e(d))},c=0;c<l.length;c++)s=new Image,d.addImage(s),r(s,d),s.src=l[c]},e.a=i},function(t,e,n){\"use strict\";var r=n(62),o={};o.createVideoStream=function(t){function e(){var e=t.videoWidth,o=t.videoHeight;n=i.size?e/o>1?i.size:Math.floor(e/o*i.size):e,r=i.size?e/o>1?Math.floor(o/e*i.size):i.size:o,s.x=n,s.y=r}var n,r,o={},i=null,a=[\"canrecord\",\"ended\"],u={},c={x:0,y:0},s={x:0,y:0};return o.getRealWidth=function(){return t.videoWidth},o.getRealHeight=function(){return t.videoHeight},o.getWidth=function(){return n},o.getHeight=function(){return r},o.setWidth=function(t){n=t},o.setHeight=function(t){r=t},o.setInputStream=function(e){i=e,t.src=void 0!==e.src?e.src:\"\"},o.ended=function(){return t.ended},o.getConfig=function(){return i},o.setAttribute=function(e,n){t.setAttribute(e,n)},o.pause=function(){t.pause()},o.play=function(){t.play()},o.setCurrentTime=function(e){\"LiveStream\"!==i.type&&(t.currentTime=e)},o.addEventListener=function(e,n,r){a.indexOf(e)!==-1?(u[e]||(u[e]=[]),u[e].push(n)):t.addEventListener(e,n,r)},o.clearEventHandlers=function(){a.forEach(function(e){var n=u[e];n&&n.length>0&&n.forEach(function(n){t.removeEventListener(e,n)})})},o.trigger=function(t,n){var r,i=u[t];if(\"canrecord\"===t&&e(),i&&i.length>0)for(r=0;r<i.length;r++)i[r].apply(o,n)},o.setTopRight=function(t){c.x=t.x,c.y=t.y},o.getTopRight=function(){return c},o.setCanvasSize=function(t){s.x=t.x,s.y=t.y},o.getCanvasSize=function(){return s},o.getFrame=function(){return t},o},o.createLiveStream=function(t){t.setAttribute(\"autoplay\",!0);var e=o.createVideoStream(t);return e.ended=function(){return!1},e},o.createImageStream=function(){function t(){l=!1,r.a.load(v,function(t){if(d=t,t[0].tags&&t[0].tags.orientation)switch(t[0].tags.orientation){case 6:case 8:u=t[0].img.height,c=t[0].img.width;break;default:u=t[0].img.width,c=t[0].img.height}else u=t[0].img.width,c=t[0].img.height;n=a.size?u/c>1?a.size:Math.floor(u/c*a.size):u,o=a.size?u/c>1?Math.floor(c/u*a.size):a.size:c,x.x=n,x.y=o,l=!0,s=0,setTimeout(function(){e(\"canrecord\",[])},0)},p,h,a.sequence)}function e(t,e){var n,r=y[t];if(r&&r.length>0)for(n=0;n<r.length;n++)r[n].apply(i,e)}var n,o,i={},a=null,u=0,c=0,s=0,f=!0,l=!1,d=null,h=0,p=1,v=null,_=!1,g=[\"canrecord\",\"ended\"],y={},m={x:0,y:0},x={x:0,y:0};return i.trigger=e,i.getWidth=function(){return n},i.getHeight=function(){return o},i.setWidth=function(t){n=t},i.setHeight=function(t){o=t},i.getRealWidth=function(){return u},i.getRealHeight=function(){return c},i.setInputStream=function(e){a=e,e.sequence===!1?(v=e.src,h=1):(v=e.src,h=e.length),t()},i.ended=function(){return _},i.setAttribute=function(){},i.getConfig=function(){return a},i.pause=function(){f=!0},i.play=function(){f=!1},i.setCurrentTime=function(t){s=t},i.addEventListener=function(t,e){g.indexOf(t)!==-1&&(y[t]||(y[t]=[]),y[t].push(e))},i.setTopRight=function(t){m.x=t.x,m.y=t.y},i.getTopRight=function(){return m},i.setCanvasSize=function(t){x.x=t.x,x.y=t.y},i.getCanvasSize=function(){return x},i.getFrame=function(){var t;return l?(f||(t=d[s],s<h-1?s++:setTimeout(function(){_=!0,e(\"ended\",[])},0)),t):null},i},e.a=o},function(t,e,n){\"use strict\";(function(t){function r(){var e;v=p.halfSample?new R.a({x:O.size.x/2|0,y:O.size.y/2|0}):O,C=n.i(w.e)(p.patchSize,v.size),z.x=v.size.x/C.x|0,z.y=v.size.y/C.y|0,E=new R.a(v.size,void 0,Uint8Array,!1),y=new R.a(C,void 0,Array,!0),e=new ArrayBuffer(65536),g=new R.a(C,new Uint8Array(e,0,C.x*C.y)),_=new R.a(C,new Uint8Array(e,C.x*C.y*3,C.x*C.y),void 0,!0),A=n.i(P.a)(\"undefined\"!=typeof window?window:\"undefined\"!=typeof self?self:t,{size:C.x},e),b=new R.a({x:v.size.x/g.size.x|0,y:v.size.y/g.size.y|0},void 0,Array,!0),m=new R.a(b.size,void 0,void 0,!0),x=new R.a(b.size,void 0,Int32Array,!0)}function o(){p.useWorker||\"undefined\"==typeof document||(N.dom.binary=document.createElement(\"canvas\"),N.dom.binary.className=\"binaryBuffer\",N.ctx.binary=N.dom.binary.getContext(\"2d\"),N.dom.binary.width=E.size.x,N.dom.binary.height=E.size.y)}function i(t){var e,n,r,o,i,a,u,c=E.size.x,s=E.size.y,f=-E.size.x,l=-E.size.y;for(e=0,n=0;n<t.length;n++)o=t[n],e+=o.rad;for(e/=t.length,e=(180*e/Math.PI+90)%180-90,e<0&&(e+=180),e=(180-e)*Math.PI/180,i=M.copy(M.create(),[Math.cos(e),Math.sin(e),-Math.sin(e),Math.cos(e)]),n=0;n<t.length;n++)for(o=t[n],r=0;r<4;r++)I.transformMat2(o.box[r],o.box[r],i);for(n=0;n<t.length;n++)for(o=t[n],r=0;r<4;r++)o.box[r][0]<c&&(c=o.box[r][0]),o.box[r][0]>f&&(f=o.box[r][0]),o.box[r][1]<s&&(s=o.box[r][1]),o.box[r][1]>l&&(l=o.box[r][1]);for(a=[[c,s],[f,s],[f,l],[c,l]],u=p.halfSample?2:1,i=M.invert(i,i),r=0;r<4;r++)I.transformMat2(a[r],a[r],i);for(r=0;r<4;r++)I.scale(a[r],a[r],u);return a}function a(){n.i(w.f)(v,E),E.zeroBorder()}function u(){var t,e,n,r,o,i,a,u=[];for(t=0;t<z.x;t++)for(e=0;e<z.y;e++)n=g.size.x*t,r=g.size.y*e,l(n,r),_.zeroBorder(),T.a.init(y.data,0),i=S.a.create(_,y),a=i.rasterize(0),o=y.moments(a.count),u=u.concat(d(o,[t,e],n,r));return u}function c(t){var e,n,r=[];for(e=0;e<t;e++)r.push(0);for(n=x.data.length;n--;)x.data[n]>0&&r[x.data[n]-1]++;return r=r.map(function(t,e){return{val:t,label:e+1}}),r.sort(function(t,e){return e.val-t.val}),r.filter(function(t){return t.val>=5})}function s(t,e){var n,r,o,a,u=[],c=[];for(n=0;n<t.length;n++){for(r=x.data.length,u.length=0;r--;)x.data[r]===t[n].label&&(o=b.data[r],u.push(o));a=i(u),a&&c.push(a)}return c}function f(t){var e=n.i(w.g)(t,.9),r=n.i(w.h)(e,1,function(t){return t.getPoints().length}),o=[],i=[];if(1===r.length){o=r[0].item.getPoints();for(var a=0;a<o.length;a++)i.push(o[a].point)}return i}function l(t,e){E.subImageAsCopy(g,n.i(w.b)(t,e)),A.skeletonize()}function d(t,e,n,r){var o,i,a,u,c=[],s=[],l=Math.ceil(C.x/3);if(t.length>=2){for(o=0;o<t.length;o++)t[o].m00>l&&c.push(t[o]);if(c.length>=2){for(a=f(c),i=0,o=0;o<a.length;o++)i+=a[o].rad;a.length>1&&a.length>=c.length/4*3&&a.length>t.length/4&&(i/=a.length,u={index:e[1]*z.x+e[0],pos:{x:n,y:r},box:[I.clone([n,r]),I.clone([n+g.size.x,r]),I.clone([n+g.size.x,r+g.size.y]),I.clone([n,r+g.size.y])],moments:a,rad:i,vec:I.clone([Math.cos(i),Math.sin(i)])},s.push(u))}}return s}function h(t){function e(){var t;for(t=0;t<x.data.length;t++)if(0===x.data[t]&&1===m.data[t])return t;return x.length}function n(t){var e,r,o,u,c,s={x:t%x.size.x,y:t/x.size.x|0};if(t<x.data.length)for(o=b.data[t],x.data[t]=i,c=0;c<D.a.searchDirections.length;c++)r=s.y+D.a.searchDirections[c][0],e=s.x+D.a.searchDirections[c][1],u=r*x.size.x+e,0!==m.data[u]?0===x.data[u]&&Math.abs(I.dot(b.data[u].vec,o.vec))>a&&n(u):x.data[u]=Number.MAX_VALUE}var r,o,i=0,a=.95,u=0;for(T.a.init(m.data,0),T.a.init(x.data,0),T.a.init(b.data,null),r=0;r<t.length;r++)o=t[r],b.data[o.index]=o,m.data[o.index]=1;for(m.zeroBorder();(u=e())<x.data.length;)i++,n(u);return i}var p,v,_,g,y,m,x,b,E,C,O,A,R=n(20),w=n(19),T=n(3),S=(n(9),n(65)),D=n(30),P=n(66),I={clone:n(7),dot:n(32),scale:n(81),transformMat2:n(82)},M={copy:n(78),create:n(79),invert:n(80)},N={ctx:{binary:null},dom:{binary:null}},z={x:0,y:0};e.a={init:function(t,e){p=e,O=t,r(),o()},locate:function(){var t,e;if(p.halfSample&&n.i(w.i)(O,v),a(),t=u(),t.length<z.x*z.y*.05)return null;var r=h(t);return r<1?null:(e=c(r),0===e.length?null:s(e,r))},checkImageConstraints:function(t,e){var r,o,i,a=t.getWidth(),u=t.getHeight(),c=e.halfSample?.5:1;if(t.getConfig().area&&(i=n.i(w.j)(a,u,t.getConfig().area),t.setTopRight({x:i.sx,y:i.sy}),t.setCanvasSize({x:a,y:u}),a=i.sw,u=i.sh),o={x:Math.floor(a*c),y:Math.floor(u*c)},r=n.i(w.e)(e.patchSize,o),t.setWidth(Math.floor(Math.floor(o.x/r.x)*(1/c)*r.x)),t.setHeight(Math.floor(Math.floor(o.y/r.y)*(1/c)*r.y)),t.getWidth()%r.x==0&&t.getHeight()%r.y==0)return!0;throw new Error(\"Image dimensions do not comply with the current settings: Width (\"+a+\" )and height (\"+u+\") must a multiple of \"+r.x)}}}).call(e,n(47))},function(t,e,n){\"use strict\";var r=n(30),o={createContour2D:function(){return{dir:null,index:null,firstVertex:null,insideContours:null,nextpeer:null,prevpeer:null}},CONTOUR_DIR:{CW_DIR:0,CCW_DIR:1,UNKNOWN_DIR:2},DIR:{OUTSIDE_EDGE:-32767,INSIDE_EDGE:-32766},create:function(t,e){var n=t.data,i=e.data,a=t.size.x,u=t.size.y,c=r.a.create(t,e);return{rasterize:function(t){var e,r,s,f,l,d,h,p,v,_,g,y,m=[],x=0;for(y=0;y<400;y++)m[y]=0;for(m[0]=n[0],v=null,d=1;d<u-1;d++)for(f=0,r=m[0],l=1;l<a-1;l++)if(g=d*a+l,0===i[g])if((e=n[g])!==r){if(0===f)s=x+1,m[s]=e,r=e,null!==(h=c.contourTracing(d,l,s,e,o.DIR.OUTSIDE_EDGE))&&(x++,f=s,p=o.createContour2D(),p.dir=o.CONTOUR_DIR.CW_DIR,p.index=f,p.firstVertex=h,p.nextpeer=v,p.insideContours=null,null!==v&&(v.prevpeer=p),v=p);else if(null!==(h=c.contourTracing(d,l,o.DIR.INSIDE_EDGE,e,f))){for(p=o.createContour2D(),p.firstVertex=h,p.insideContours=null,p.dir=0===t?o.CONTOUR_DIR.CCW_DIR:o.CONTOUR_DIR.CW_DIR,p.index=t,_=v;null!==_&&_.index!==f;)_=_.nextpeer;null!==_&&(p.nextpeer=_.insideContours,null!==_.insideContours&&(_.insideContours.prevpeer=p),_.insideContours=p)}}else i[g]=f;else i[g]===o.DIR.OUTSIDE_EDGE||i[g]===o.DIR.INSIDE_EDGE?(f=0,r=i[g]===o.DIR.INSIDE_EDGE?n[g]:m[0]):(f=i[g],r=m[f]);for(_=v;null!==_;)_.index=t,_=_.nextpeer;return{cc:v,count:x}},debug:{drawContour:function(t,e){var n,r,i,a=t.getContext(\"2d\"),u=e;for(a.strokeStyle=\"red\",a.fillStyle=\"red\",a.lineWidth=1,n=null!==u?u.insideContours:null;null!==u;){switch(null!==n?(r=n,n=n.nextpeer):(r=u,u=u.nextpeer,n=null!==u?u.insideContours:null),r.dir){case o.CONTOUR_DIR.CW_DIR:a.strokeStyle=\"red\";break;case o.CONTOUR_DIR.CCW_DIR:a.strokeStyle=\"blue\";break;case o.CONTOUR_DIR.UNKNOWN_DIR:a.strokeStyle=\"green\"}i=r.firstVertex,a.beginPath(),a.moveTo(i.x,i.y);do i=i.next,a.lineTo(i.x,i.y);while(i!==r.firstVertex);a.stroke()}}}}}};e.a=o},function(module, __webpack_exports__, __webpack_require__) {\"use strict\";function Skeletonizer(stdlib, foreign, buffer) {\"use asm\";var images=new stdlib.Uint8Array(buffer),size=foreign.size|0,imul=stdlib.Math.imul;function erode(inImagePtr, outImagePtr) {inImagePtr=inImagePtr|0;outImagePtr=outImagePtr|0;var v=0,u=0,sum=0,yStart1=0,yStart2=0,xStart1=0,xStart2=0,offset=0;for (v=1; (v|0)<(size - 1|0); v=v+1|0) {offset=offset+size|0;for (u=1; (u|0)<(size - 1|0); u=u+1|0) {yStart1=offset - size|0;yStart2=offset+size|0;xStart1=u - 1|0;xStart2=u+1|0;sum=(images[inImagePtr+yStart1+xStart1|0]|0)+(images[inImagePtr+yStart1+xStart2|0]|0)+(images[inImagePtr+offset+u|0]|0)+(images[inImagePtr+yStart2+xStart1|0]|0)+(images[inImagePtr+yStart2+xStart2|0]|0)|0;if ((sum|0) == (5|0)) {images[outImagePtr+offset+u|0]=1;} else {images[outImagePtr+offset+u|0]=0;}}}return;}function subtract(aImagePtr, bImagePtr, outImagePtr) {aImagePtr=aImagePtr|0;bImagePtr=bImagePtr|0;outImagePtr=outImagePtr|0;var length=0;length=imul(size, size)|0;while ((length|0)>0) {length=length - 1|0;images[outImagePtr+length|0]=(images[aImagePtr+length|0]|0) - (images[bImagePtr+length|0]|0)|0;}}function bitwiseOr(aImagePtr, bImagePtr, outImagePtr) {aImagePtr=aImagePtr|0;bImagePtr=bImagePtr|0;outImagePtr=outImagePtr|0;var length=0;length=imul(size, size)|0;while ((length|0)>0) {length=length - 1|0;images[outImagePtr+length|0]=images[aImagePtr+length|0]|0|(images[bImagePtr+length|0]|0)|0;}}function countNonZero(imagePtr) {imagePtr=imagePtr|0;var sum=0,length=0;length=imul(size, size)|0;while ((length|0)>0) {length=length - 1|0;sum=(sum|0)+(images[imagePtr+length|0]|0)|0;}return sum|0;}function init(imagePtr, value) {imagePtr=imagePtr|0;value=value|0;var length=0;length=imul(size, size)|0;while ((length|0)>0) {length=length - 1|0;images[imagePtr+length|0]=value;}}function dilate(inImagePtr, outImagePtr) {inImagePtr=inImagePtr|0;outImagePtr=outImagePtr|0;var v=0,u=0,sum=0,yStart1=0,yStart2=0,xStart1=0,xStart2=0,offset=0;for (v=1; (v|0)<(size - 1|0); v=v+1|0) {offset=offset+size|0;for (u=1; (u|0)<(size - 1|0); u=u+1|0) {yStart1=offset - size|0;yStart2=offset+size|0;xStart1=u - 1|0;xStart2=u+1|0;sum=(images[inImagePtr+yStart1+xStart1|0]|0)+(images[inImagePtr+yStart1+xStart2|0]|0)+(images[inImagePtr+offset+u|0]|0)+(images[inImagePtr+yStart2+xStart1|0]|0)+(images[inImagePtr+yStart2+xStart2|0]|0)|0;if ((sum|0)>(0|0)) {images[outImagePtr+offset+u|0]=1;} else {images[outImagePtr+offset+u|0]=0;}}}return;}function memcpy(srcImagePtr, dstImagePtr) {srcImagePtr=srcImagePtr|0;dstImagePtr=dstImagePtr|0;var length=0;length=imul(size, size)|0;while ((length|0)>0) {length=length - 1|0;images[dstImagePtr+length|0]=images[srcImagePtr+length|0]|0;}}function zeroBorder(imagePtr) {imagePtr=imagePtr|0;var x=0,y=0;for (x=0; (x|0)<(size - 1|0); x=x+1|0) {images[imagePtr+x|0]=0;images[imagePtr+y|0]=0;y=y+size - 1|0;images[imagePtr+y|0]=0;y=y+1|0;}for (x=0; (x|0)<(size|0); x=x+1|0) {images[imagePtr+y|0]=0;y=y+1|0;}}function skeletonize() {var subImagePtr=0,erodedImagePtr=0,tempImagePtr=0,skelImagePtr=0,sum=0,done=0;erodedImagePtr=imul(size, size)|0;tempImagePtr=erodedImagePtr+erodedImagePtr|0;skelImagePtr=tempImagePtr+erodedImagePtr|0;init(skelImagePtr, 0);zeroBorder(subImagePtr);do {erode(subImagePtr, erodedImagePtr);dilate(erodedImagePtr, tempImagePtr);subtract(subImagePtr, tempImagePtr, tempImagePtr);bitwiseOr(skelImagePtr, tempImagePtr, skelImagePtr);memcpy(erodedImagePtr, subImagePtr);sum=countNonZero(subImagePtr)|0;done=(sum|0) == 0|0;} while (!done);}return {skeletonize: skeletonize};} __webpack_exports__[\"a\"]=Skeletonizer; },function(t,e,n){\"use strict\";function r(t){o.a.call(this,t),this.barSpaceRatio=[1,1]}var o=n(1),i=1,a=3,u={START_PATTERN:{value:[a,i,a,i,i,i]},STOP_PATTERN:{value:[a,i,i,i,a]},CODE_PATTERN:{value:[[i,i,a,a,i],[a,i,i,i,a],[i,a,i,i,a],[a,a,i,i,i],[i,i,a,i,a],[a,i,a,i,i],[i,a,a,i,i],[i,i,i,a,a],[a,i,i,a,i],[i,a,i,a,i]]},SINGLE_CODE_ERROR:{value:.78,writable:!0},AVG_CODE_ERROR:{value:.3,writable:!0},FORMAT:{value:\"2of5\"}},c=u.START_PATTERN.value.reduce(function(t,e){return t+e},0);r.prototype=Object.create(o.a.prototype,u),r.prototype.constructor=r,r.prototype._findPattern=function(t,e,n,r){var o,i,a,u,c=[],s=this,f=0,l={error:Number.MAX_VALUE,code:-1,start:0,end:0},d=s.AVG_CODE_ERROR;for(n=n||!1,r=r||!1,e||(e=s._nextSet(s._row)),o=0;o<t.length;o++)c[o]=0;for(o=e;o<s._row.length;o++)if(s._row[o]^n)c[f]++;else{if(f===c.length-1){for(u=0,a=0;a<c.length;a++)u+=c[a];if((i=s._matchPattern(c,t))<d)return l.error=i,l.start=o-u,l.end=o,l;if(!r)return null;for(a=0;a<c.length-2;a++)c[a]=c[a+2];c[c.length-2]=0,c[c.length-1]=0,f--}else f++;c[f]=1,n=!n}return null},r.prototype._findStart=function(){for(var t,e,n=this,r=n._nextSet(n._row),o=1;!e;){if(!(e=n._findPattern(n.START_PATTERN,r,!1,!0)))return null;if(o=Math.floor((e.end-e.start)/c),(t=e.start-5*o)>=0&&n._matchRange(t,e.start,0))return e;r=e.end,e=null}},r.prototype._verifyTrailingWhitespace=function(t){var e,n=this;return e=t.end+(t.end-t.start)/2,e<n._row.length&&n._matchRange(t.end,e,0)?t:null},r.prototype._findEnd=function(){var t,e,n,r=this;return r._row.reverse(),n=r._nextSet(r._row),t=r._findPattern(r.STOP_PATTERN,n,!1,!0),r._row.reverse(),null===t?null:(e=t.start,t.start=r._row.length-t.end,t.end=r._row.length-e,null!==t?r._verifyTrailingWhitespace(t):null)},r.prototype._decodeCode=function(t){var e,n,r,o=this,i=0,a=o.AVG_CODE_ERROR,u={error:Number.MAX_VALUE,code:-1,start:0,end:0};for(e=0;e<t.length;e++)i+=t[e];for(r=0;r<o.CODE_PATTERN.length;r++)(n=o._matchPattern(t,o.CODE_PATTERN[r]))<u.error&&(u.code=r,u.error=n);if(u.error<a)return u},r.prototype._decodePayload=function(t,e,n){for(var r,o,i=this,a=0,u=t.length,c=[0,0,0,0,0];a<u;){for(r=0;r<5;r++)c[r]=t[a]*this.barSpaceRatio[0],a+=2;if(!(o=i._decodeCode(c)))return null;e.push(o.code+\"\"),n.push(o)}return o},r.prototype._verifyCounterLength=function(t){return t.length%10==0},r.prototype._decode=function(){var t,e,n,r=this,o=[],i=[];return(t=r._findStart())?(i.push(t),(e=r._findEnd())?(n=r._fillCounters(t.end,e.start,!1),r._verifyCounterLength(n)&&r._decodePayload(n,o,i)?o.length<5?null:(i.push(e),{code:o.join(\"\"),start:t.start,end:e.end,startInfo:t,decodedCodes:i}):null):null):null},e.a=r},function(t,e,n){\"use strict\";function r(){o.a.call(this),this._counters=[]}var o=n(1),i={ALPHABETH_STRING:{value:\"0123456789-$:/.+ABCD\"},ALPHABET:{value:[48,49,50,51,52,53,54,55,56,57,45,36,58,47,46,43,65,66,67,68]},CHARACTER_ENCODINGS:{value:[3,6,9,96,18,66,33,36,48,72,12,24,69,81,84,21,26,41,11,14]},START_END:{value:[26,41,11,14]},MIN_ENCODED_CHARS:{value:4},MAX_ACCEPTABLE:{value:2},PADDING:{value:1.5},FORMAT:{value:\"codabar\",writeable:!1}};r.prototype=Object.create(o.a.prototype,i),r.prototype.constructor=r,r.prototype._decode=function(){var t,e,n,r,o,i=this,a=[];if(this._counters=i._fillCounters(),!(t=i._findStart()))return null;r=t.startCounter;do{if((n=i._toPattern(r))<0)return null;if((e=i._patternToChar(n))<0)return null;if(a.push(e),r+=8,a.length>1&&i._isStartEnd(n))break}while(r<i._counters.length);return a.length-2<i.MIN_ENCODED_CHARS||!i._isStartEnd(n)?null:i._verifyWhitespace(t.startCounter,r-8)&&i._validateResult(a,t.startCounter)?(r=r>i._counters.length?i._counters.length:r,o=t.start+i._sumCounters(t.startCounter,r-8),{code:a.join(\"\"),start:t.start,end:o,startInfo:t,decodedCodes:a}):null},r.prototype._verifyWhitespace=function(t,e){return(t-1<=0||this._counters[t-1]>=this._calculatePatternLength(t)/2)&&(e+8>=this._counters.length||this._counters[e+7]>=this._calculatePatternLength(e)/2)},r.prototype._calculatePatternLength=function(t){var e,n=0;for(e=t;e<t+7;e++)n+=this._counters[e];return n},r.prototype._thresholdResultPattern=function(t,e){var n,r,o,i,a,u=this,c={space:{narrow:{size:0,counts:0,min:0,max:Number.MAX_VALUE},wide:{size:0,counts:0,min:0,max:Number.MAX_VALUE}},bar:{narrow:{size:0,counts:0,min:0,max:Number.MAX_VALUE},wide:{size:0,counts:0,min:0,max:Number.MAX_VALUE}}},s=e;for(o=0;o<t.length;o++){for(a=u._charToPattern(t[o]),i=6;i>=0;i--)n=2==(1&i)?c.bar:c.space,r=1==(1&a)?n.wide:n.narrow,r.size+=u._counters[s+i],r.counts++,a>>=1;s+=8}return[\"space\",\"bar\"].forEach(function(t){var e=c[t];e.wide.min=Math.floor((e.narrow.size/e.narrow.counts+e.wide.size/e.wide.counts)/2),e.narrow.max=Math.ceil(e.wide.min),e.wide.max=Math.ceil((e.wide.size*u.MAX_ACCEPTABLE+u.PADDING)/e.wide.counts)}),c},r.prototype._charToPattern=function(t){var e,n=this,r=t.charCodeAt(0);for(e=0;e<n.ALPHABET.length;e++)if(n.ALPHABET[e]===r)return n.CHARACTER_ENCODINGS[e];return 0},r.prototype._validateResult=function(t,e){var n,r,o,i,a,u,c=this,s=c._thresholdResultPattern(t,e),f=e;for(n=0;n<t.length;n++){for(u=c._charToPattern(t[n]),r=6;r>=0;r--){if(o=0==(1&r)?s.bar:s.space,i=1==(1&u)?o.wide:o.narrow,(a=c._counters[f+r])<i.min||a>i.max)return!1;u>>=1}f+=8}return!0},r.prototype._patternToChar=function(t){var e,n=this;for(e=0;e<n.CHARACTER_ENCODINGS.length;e++)if(n.CHARACTER_ENCODINGS[e]===t)return String.fromCharCode(n.ALPHABET[e]);return-1},r.prototype._computeAlternatingThreshold=function(t,e){var n,r,o=Number.MAX_VALUE,i=0;for(n=t;n<e;n+=2)r=this._counters[n],r>i&&(i=r),r<o&&(o=r);return(o+i)/2|0},r.prototype._toPattern=function(t){var e,n,r,o,i=7,a=t+i,u=1<<i-1,c=0;if(a>this._counters.length)return-1;for(e=this._computeAlternatingThreshold(t,a),n=this._computeAlternatingThreshold(t+1,a),r=0;r<i;r++)o=0==(1&r)?e:n,this._counters[t+r]>o&&(c|=u),u>>=1;return c},r.prototype._isStartEnd=function(t){var e;for(e=0;e<this.START_END.length;e++)if(this.START_END[e]===t)return!0;return!1},r.prototype._sumCounters=function(t,e){var n,r=0;for(n=t;n<e;n++)r+=this._counters[n];return r},r.prototype._findStart=function(){var t,e,n,r=this,o=r._nextUnset(r._row);for(t=1;t<this._counters.length;t++)if((e=r._toPattern(t))!==-1&&r._isStartEnd(e))return o+=r._sumCounters(0,t),n=o+r._sumCounters(t,t+8),{start:o,end:n,startCounter:t,endCounter:t+8}},e.a=r},function(t,e,n){\"use strict\";function r(){i.a.call(this)}function o(t,e,n){for(var r=n.length,o=0,i=0;r--;)i+=t[n[r]],o+=e[n[r]];return i/o}var i=n(1),a={CODE_SHIFT:{value:98},CODE_C:{value:99},CODE_B:{value:100},CODE_A:{value:101},START_CODE_A:{value:103},START_CODE_B:{value:104},START_CODE_C:{value:105},STOP_CODE:{value:106},CODE_PATTERN:{value:[[2,1,2,2,2,2],[2,2,2,1,2,2],[2,2,2,2,2,1],[1,2,1,2,2,3],[1,2,1,3,2,2],[1,3,1,2,2,2],[1,2,2,2,1,3],[1,2,2,3,1,2],[1,3,2,2,1,2],[2,2,1,2,1,3],[2,2,1,3,1,2],[2,3,1,2,1,2],[1,1,2,2,3,2],[1,2,2,1,3,2],[1,2,2,2,3,1],[1,1,3,2,2,2],[1,2,3,1,2,2],[1,2,3,2,2,1],[2,2,3,2,1,1],[2,2,1,1,3,2],[2,2,1,2,3,1],[2,1,3,2,1,2],[2,2,3,1,1,2],[3,1,2,1,3,1],[3,1,1,2,2,2],[3,2,1,1,2,2],[3,2,1,2,2,1],[3,1,2,2,1,2],[3,2,2,1,1,2],[3,2,2,2,1,1],[2,1,2,1,2,3],[2,1,2,3,2,1],[2,3,2,1,2,1],[1,1,1,3,2,3],[1,3,1,1,2,3],[1,3,1,3,2,1],[1,1,2,3,1,3],[1,3,2,1,1,3],[1,3,2,3,1,1],[2,1,1,3,1,3],[2,3,1,1,1,3],[2,3,1,3,1,1],[1,1,2,1,3,3],[1,1,2,3,3,1],[1,3,2,1,3,1],[1,1,3,1,2,3],[1,1,3,3,2,1],[1,3,3,1,2,1],[3,1,3,1,2,1],[2,1,1,3,3,1],[2,3,1,1,3,1],[2,1,3,1,1,3],[2,1,3,3,1,1],[2,1,3,1,3,1],[3,1,1,1,2,3],[3,1,1,3,2,1],[3,3,1,1,2,1],[3,1,2,1,1,3],[3,1,2,3,1,1],[3,3,2,1,1,1],[3,1,4,1,1,1],[2,2,1,4,1,1],[4,3,1,1,1,1],[1,1,1,2,2,4],[1,1,1,4,2,2],[1,2,1,1,2,4],[1,2,1,4,2,1],[1,4,1,1,2,2],[1,4,1,2,2,1],[1,1,2,2,1,4],[1,1,2,4,1,2],[1,2,2,1,1,4],[1,2,2,4,1,1],[1,4,2,1,1,2],[1,4,2,2,1,1],[2,4,1,2,1,1],[2,2,1,1,1,4],[4,1,3,1,1,1],[2,4,1,1,1,2],[1,3,4,1,1,1],[1,1,1,2,4,2],[1,2,1,1,4,2],[1,2,1,2,4,1],[1,1,4,2,1,2],[1,2,4,1,1,2],[1,2,4,2,1,1],[4,1,1,2,1,2],[4,2,1,1,1,2],[4,2,1,2,1,1],[2,1,2,1,4,1],[2,1,4,1,2,1],[4,1,2,1,2,1],[1,1,1,1,4,3],[1,1,1,3,4,1],[1,3,1,1,4,1],[1,1,4,1,1,3],[1,1,4,3,1,1],[4,1,1,1,1,3],[4,1,1,3,1,1],[1,1,3,1,4,1],[1,1,4,1,3,1],[3,1,1,1,4,1],[4,1,1,1,3,1],[2,1,1,4,1,2],[2,1,1,2,1,4],[2,1,1,2,3,2],[2,3,3,1,1,1,2]]},SINGLE_CODE_ERROR:{value:.64},AVG_CODE_ERROR:{value:.3},FORMAT:{value:\"code_128\",writeable:!1},MODULE_INDICES:{value:{bar:[0,2,4],space:[1,3,5]}}};r.prototype=Object.create(i.a.prototype,a),r.prototype.constructor=r,r.prototype._decodeCode=function(t,e){var n,r,i,a=[0,0,0,0,0,0],u=this,c=t,s=!u._row[c],f=0,l={error:Number.MAX_VALUE,code:-1,start:t,end:t,correction:{bar:1,space:1}};for(n=c;n<u._row.length;n++)if(u._row[n]^s)a[f]++;else{if(f===a.length-1){for(e&&u._correct(a,e),r=0;r<u.CODE_PATTERN.length;r++)(i=u._matchPattern(a,u.CODE_PATTERN[r]))<l.error&&(l.code=r,l.error=i);return l.end=n,l.code===-1||l.error>u.AVG_CODE_ERROR?null:(u.CODE_PATTERN[l.code]&&(l.correction.bar=o(u.CODE_PATTERN[l.code],a,this.MODULE_INDICES.bar),l.correction.space=o(u.CODE_PATTERN[l.code],a,this.MODULE_INDICES.space)),l)}f++,a[f]=1,s=!s}return null},r.prototype._correct=function(t,e){this._correctBars(t,e.bar,this.MODULE_INDICES.bar),this._correctBars(t,e.space,this.MODULE_INDICES.space)},r.prototype._findStart=function(){var t,e,n,r,i,a=[0,0,0,0,0,0],u=this,c=u._nextSet(u._row),s=!1,f=0,l={error:Number.MAX_VALUE,code:-1,start:0,end:0,correction:{bar:1,space:1}};for(t=c;t<u._row.length;t++)if(u._row[t]^s)a[f]++;else{if(f===a.length-1){for(i=0,r=0;r<a.length;r++)i+=a[r];for(e=u.START_CODE_A;e<=u.START_CODE_C;e++)(n=u._matchPattern(a,u.CODE_PATTERN[e]))<l.error&&(l.code=e,l.error=n);if(l.error<u.AVG_CODE_ERROR)return l.start=t-i,l.end=t,l.correction.bar=o(u.CODE_PATTERN[l.code],a,this.MODULE_INDICES.bar),l.correction.space=o(u.CODE_PATTERN[l.code],a,this.MODULE_INDICES.space),l;for(r=0;r<4;r++)a[r]=a[r+2];a[4]=0,a[5]=0,f--}else f++;a[f]=1,s=!s}return null},r.prototype._decode=function(){var t,e,n=this,r=n._findStart(),o=null,i=!1,a=[],u=0,c=0,s=[],f=[],l=!1,d=!0;if(null===r)return null;switch(o={code:r.code,start:r.start,end:r.end,correction:{bar:r.correction.bar,space:r.correction.space}},f.push(o),c=o.code,o.code){case n.START_CODE_A:t=n.CODE_A;break;case n.START_CODE_B:t=n.CODE_B;break;case n.START_CODE_C:t=n.CODE_C;break;default:return null}for(;!i;){if(e=l,l=!1,null!==(o=n._decodeCode(o.end,o.correction)))switch(o.code!==n.STOP_CODE&&(d=!0),o.code!==n.STOP_CODE&&(s.push(o.code),u++,c+=u*o.code),f.push(o),t){case n.CODE_A:if(o.code<64)a.push(String.fromCharCode(32+o.code));else if(o.code<96)a.push(String.fromCharCode(o.code-64));else switch(o.code!==n.STOP_CODE&&(d=!1),o.code){case n.CODE_SHIFT:l=!0,t=n.CODE_B;break;case n.CODE_B:t=n.CODE_B;break;case n.CODE_C:t=n.CODE_C;break;case n.STOP_CODE:i=!0}break;case n.CODE_B:if(o.code<96)a.push(String.fromCharCode(32+o.code));else switch(o.code!==n.STOP_CODE&&(d=!1),o.code){case n.CODE_SHIFT:l=!0,t=n.CODE_A;break;case n.CODE_A:t=n.CODE_A;break;case n.CODE_C:t=n.CODE_C;break;case n.STOP_CODE:i=!0}break;case n.CODE_C:if(o.code<100)a.push(o.code<10?\"0\"+o.code:o.code);else switch(o.code!==n.STOP_CODE&&(d=!1),o.code){case n.CODE_A:t=n.CODE_A;break;case n.CODE_B:t=n.CODE_B;break;case n.STOP_CODE:i=!0}}else i=!0;e&&(t=t===n.CODE_A?n.CODE_B:n.CODE_A)}return null===o?null:(o.end=n._nextUnset(n._row,o.end),n._verifyTrailingWhitespace(o)?(c-=u*s[s.length-1])%103!==s[s.length-1]?null:a.length?(d&&a.splice(a.length-1,1),{code:a.join(\"\"),start:r.start,end:o.end,codeset:t,startInfo:r,decodedCodes:f,endInfo:o}):null:null)},i.a.prototype._verifyTrailingWhitespace=function(t){var e,n=this;return e=t.end+(t.end-t.start)/2,e<n._row.length&&n._matchRange(t.end,e,0)?t:null},e.a=r},function(t,e,n){\"use strict\";function r(){o.a.call(this)}var o=n(31),i={IOQ:/[IOQ]/g,AZ09:/[A-Z0-9]{17}/};r.prototype=Object.create(o.a.prototype),r.prototype.constructor=r,r.prototype._decode=function(){var t=o.a.prototype._decode.apply(this);if(!t)return null;var e=t.code;return e?(e=e.replace(i.IOQ,\"\"),e.match(i.AZ09)&&this._checkChecksum(e)?(t.code=e,t):null):null},r.prototype._checkChecksum=function(t){return!!t},e.a=r},function(t,e,n){\"use strict\";function r(){o.a.call(this)}var o=n(1),i=n(3),a=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*\",u={ALPHABETH_STRING:{value:a},ALPHABET:{value:a.split(\"\").map(function(t){return t.charCodeAt(0)})},CHARACTER_ENCODINGS:{value:[276,328,324,322,296,292,290,336,274,266,424,420,418,404,402,394,360,356,354,308,282,344,332,326,300,278,436,434,428,422,406,410,364,358,310,314,302,468,466,458,366,374,430,294,474,470,306,350]},ASTERISK:{value:350},FORMAT:{value:\"code_93\",writeable:!1}};r.prototype=Object.create(o.a.prototype,u),r.prototype.constructor=r,r.prototype._decode=function(){var t,e,n,r,o=this,a=[0,0,0,0,0,0],u=[],c=o._findStart();if(!c)return null;r=o._nextSet(o._row,c.end);do{if(a=o._toCounters(r,a),(n=o._toPattern(a))<0)return null;if((t=o._patternToChar(n))<0)return null;u.push(t),e=r,r+=i.a.sum(a),r=o._nextSet(o._row,r)}while(\"*\"!==t);return u.pop(),u.length&&o._verifyEnd(e,r,a)&&o._verifyChecksums(u)?(u=u.slice(0,u.length-2),null===(u=o._decodeExtended(u))?null:{code:u.join(\"\"),start:c.start,end:r,startInfo:c,decodedCodes:u}):null},r.prototype._verifyEnd=function(t,e){return!(t===e||!this._row[e])},r.prototype._patternToChar=function(t){var e,n=this;for(e=0;e<n.CHARACTER_ENCODINGS.length;e++)if(n.CHARACTER_ENCODINGS[e]===t)return String.fromCharCode(n.ALPHABET[e]);return-1},r.prototype._toPattern=function(t){for(var e=t.length,n=0,r=0,o=0;o<e;o++)r+=t[o];for(var i=0;i<e;i++){var a=Math.round(9*t[i]/r);if(a<1||a>4)return-1;if(0==(1&i))for(var u=0;u<a;u++)n=n<<1|1;else n<<=a}return n},r.prototype._findStart=function(){var t,e,n,r=this,o=r._nextSet(r._row),i=o,a=[0,0,0,0,0,0],u=0,c=!1;for(t=o;t<r._row.length;t++)if(r._row[t]^c)a[u]++;else{if(u===a.length-1){if(r._toPattern(a)===r.ASTERISK&&(n=Math.floor(Math.max(0,i-(t-i)/4)),r._matchRange(n,i,0)))return{start:i,end:t};for(i+=a[0]+a[1],e=0;e<4;e++)a[e]=a[e+2];a[4]=0,a[5]=0,u--}else u++;a[u]=1,c=!c}return null},r.prototype._decodeExtended=function(t){for(var e=t.length,n=[],r=0;r<e;r++){var o=t[r];if(o>=\"a\"&&o<=\"d\"){if(r>e-2)return null;var i=t[++r],a=i.charCodeAt(0),u=void 0;switch(o){case\"a\":if(!(i>=\"A\"&&i<=\"Z\"))return null;u=String.fromCharCode(a-64);break;case\"b\":if(i>=\"A\"&&i<=\"E\")u=String.fromCharCode(a-38);else if(i>=\"F\"&&i<=\"J\")u=String.fromCharCode(a-11);else if(i>=\"K\"&&i<=\"O\")u=String.fromCharCode(a+16);else if(i>=\"P\"&&i<=\"S\")u=String.fromCharCode(a+43);else{if(!(i>=\"T\"&&i<=\"Z\"))return null;u=String.fromCharCode(127)}break;case\"c\":if(i>=\"A\"&&i<=\"O\")u=String.fromCharCode(a-32);else{if(\"Z\"!==i)return null;u=\":\"}break;case\"d\":if(!(i>=\"A\"&&i<=\"Z\"))return null;u=String.fromCharCode(a+32)}n.push(u)}else n.push(o)}return n},r.prototype._verifyChecksums=function(t){return this._matchCheckChar(t,t.length-2,20)&&this._matchCheckChar(t,t.length-1,15)},r.prototype._matchCheckChar=function(t,e,n){var r=this,o=t.slice(0,e),i=o.length,a=o.reduce(function(t,e,o){return t+((o*-1+(i-1))%n+1)*r.ALPHABET.indexOf(e.charCodeAt(0))},0);return this.ALPHABET[a%47]===t[e].charCodeAt(0)},e.a=r},function(t,e,n){\"use strict\";function r(){o.a.call(this)}var o=n(4),i={FORMAT:{value:\"ean_2\",writeable:!1}};r.prototype=Object.create(o.a.prototype,i),r.prototype.constructor=r,r.prototype.decode=function(t,e){this._row=t;var n,r=0,o=0,i=e,a=this._row.length,u=[],c=[];for(o=0;o<2&&i<a;o++){if(!(n=this._decodeCode(i)))return null;c.push(n),u.push(n.code%10),n.code>=this.CODE_G_START&&(r|=1<<1-o),1!=o&&(i=this._nextSet(this._row,n.end),i=this._nextUnset(this._row,i))}return 2!=u.length||parseInt(u.join(\"\"))%4!==r?null:{code:u.join(\"\"),decodedCodes:c,end:n.end}},e.a=r},function(t,e,n){\"use strict\";function r(){a.a.call(this)}function o(t){var e;for(e=0;e<10;e++)if(t===c[e])return e;return null}function i(t){var e,n=t.length,r=0;for(e=n-2;e>=0;e-=2)r+=t[e];for(r*=3,e=n-1;e>=0;e-=2)r+=t[e];return(r*=3)%10}var a=n(4),u={FORMAT:{value:\"ean_5\",writeable:!1}},c=[24,20,18,17,12,6,3,10,9,5];r.prototype=Object.create(a.a.prototype,u),r.prototype.constructor=r,r.prototype.decode=function(t,e){this._row=t;var n,r=0,a=0,u=e,c=this._row.length,s=[],f=[];for(a=0;a<5&&u<c;a++){if(!(n=this._decodeCode(u)))return null;f.push(n),s.push(n.code%10),n.code>=this.CODE_G_START&&(r|=1<<4-a),4!=a&&(u=this._nextSet(this._row,n.end),u=this._nextUnset(this._row,u))}return 5!=s.length?null:i(s)!==o(r)?null:{code:s.join(\"\"),decodedCodes:f,end:n.end}},e.a=r},function(t,e,n){\"use strict\";function r(t,e){o.a.call(this,t,e)}var o=n(4),i={FORMAT:{value:\"ean_8\",writeable:!1}};r.prototype=Object.create(o.a.prototype,i),r.prototype.constructor=r,r.prototype._decodePayload=function(t,e,n){var r,o=this;for(r=0;r<4;r++){if(!(t=o._decodeCode(t.end,o.CODE_G_START)))return null;e.push(t.code),n.push(t)}if(null===(t=o._findPattern(o.MIDDLE_PATTERN,t.end,!0,!1)))return null;for(n.push(t),r=0;r<4;r++){if(!(t=o._decodeCode(t.end,o.CODE_G_START)))return null;n.push(t),e.push(t.code)}return t},e.a=r},function(t,e,n){\"use strict\";function r(t){t=a()(o(),t),u.a.call(this,t),this.barSpaceRatio=[1,1],t.normalizeBarSpaceWidth&&(this.SINGLE_CODE_ERROR=.38,this.AVG_CODE_ERROR=.09)}function o(){var t={};return Object.keys(r.CONFIG_KEYS).forEach(function(e){t[e]=r.CONFIG_KEYS[e].default}),t}var i=n(28),a=n.n(i),u=n(1),c=1,s=3,f={START_PATTERN:{value:[c,c,c,c]},STOP_PATTERN:{value:[c,c,s]},CODE_PATTERN:{value:[[c,c,s,s,c],[s,c,c,c,s],[c,s,c,c,s],[s,s,c,c,c],[c,c,s,c,s],[s,c,s,c,c],[c,s,s,c,c],[c,c,c,s,s],[s,c,c,s,c],[c,s,c,s,c]]},SINGLE_CODE_ERROR:{value:.78,writable:!0},AVG_CODE_ERROR:{value:.38,writable:!0},MAX_CORRECTION_FACTOR:{value:5},FORMAT:{value:\"i2of5\"}};r.prototype=Object.create(u.a.prototype,f),r.prototype.constructor=r,r.prototype._matchPattern=function(t,e){if(this.config.normalizeBarSpaceWidth){var n,r=[0,0],o=[0,0],i=[0,0],a=this.MAX_CORRECTION_FACTOR,c=1/a;for(n=0;n<t.length;n++)r[n%2]+=t[n],o[n%2]+=e[n];for(i[0]=o[0]/r[0],i[1]=o[1]/r[1],i[0]=Math.max(Math.min(i[0],a),c),i[1]=Math.max(Math.min(i[1],a),c),this.barSpaceRatio=i,n=0;n<t.length;n++)t[n]*=this.barSpaceRatio[n%2]}return u.a.prototype._matchPattern.call(this,t,e)},r.prototype._findPattern=function(t,e,n,r){var o,i,a,u,c=[],s=this,f=0,l={error:Number.MAX_VALUE,code:-1,start:0,end:0},d=s.AVG_CODE_ERROR;for(n=n||!1,r=r||!1,e||(e=s._nextSet(s._row)),o=0;o<t.length;o++)c[o]=0;for(o=e;o<s._row.length;o++)if(s._row[o]^n)c[f]++;else{if(f===c.length-1){for(u=0,a=0;a<c.length;a++)u+=c[a];if((i=s._matchPattern(c,t))<d)return l.error=i,l.start=o-u,l.end=o,l;if(!r)return null;for(a=0;a<c.length-2;a++)c[a]=c[a+2];c[c.length-2]=0,c[c.length-1]=0,f--}else f++;c[f]=1,n=!n}return null},r.prototype._findStart=function(){for(var t,e,n=this,r=n._nextSet(n._row),o=1;!e;){if(!(e=n._findPattern(n.START_PATTERN,r,!1,!0)))return null;if(o=Math.floor((e.end-e.start)/4),(t=e.start-10*o)>=0&&n._matchRange(t,e.start,0))return e;r=e.end,e=null}},r.prototype._verifyTrailingWhitespace=function(t){var e,n=this;return e=t.end+(t.end-t.start)/2,e<n._row.length&&n._matchRange(t.end,e,0)?t:null},r.prototype._findEnd=function(){var t,e,n=this;return n._row.reverse(),t=n._findPattern(n.STOP_PATTERN),n._row.reverse(),null===t?null:(e=t.start,t.start=n._row.length-t.end,t.end=n._row.length-e,null!==t?n._verifyTrailingWhitespace(t):null)},r.prototype._decodePair=function(t){var e,n,r=[],o=this;for(e=0;e<t.length;e++){if(!(n=o._decodeCode(t[e])))return null;r.push(n)}return r},r.prototype._decodeCode=function(t){var e,n,r,o=this,i=0,a=o.AVG_CODE_ERROR,u={error:Number.MAX_VALUE,code:-1,start:0,end:0};for(e=0;e<t.length;e++)i+=t[e];for(r=0;r<o.CODE_PATTERN.length;r++)(n=o._matchPattern(t,o.CODE_PATTERN[r]))<u.error&&(u.code=r,u.error=n);if(u.error<a)return u},r.prototype._decodePayload=function(t,e,n){for(var r,o,i=this,a=0,u=t.length,c=[[0,0,0,0,0],[0,0,0,0,0]];a<u;){for(r=0;r<5;r++)c[0][r]=t[a]*this.barSpaceRatio[0],c[1][r]=t[a+1]*this.barSpaceRatio[1],a+=2;if(!(o=i._decodePair(c)))return null;for(r=0;r<o.length;r++)e.push(o[r].code+\"\"),n.push(o[r])}return o},r.prototype._verifyCounterLength=function(t){return t.length%10==0},r.prototype._decode=function(){var t,e,n,r=this,o=[],i=[];return(t=r._findStart())?(i.push(t),(e=r._findEnd())?(n=r._fillCounters(t.end,e.start,!1),r._verifyCounterLength(n)&&r._decodePayload(n,o,i)?o.length%2!=0||o.length<6?null:(i.push(e),{code:o.join(\"\"),start:t.start,end:e.end,startInfo:t,decodedCodes:i}):null):null):null},r.CONFIG_KEYS={normalizeBarSpaceWidth:{type:\"boolean\",default:!1,description:\"If true, the reader tries to normalize thewidth-difference between bars and spaces\"}},e.a=r},function(t,e,n){\"use strict\";function r(t,e){o.a.call(this,t,e)}var o=n(4),i={CODE_FREQUENCY:{value:[[56,52,50,49,44,38,35,42,41,37],[7,11,13,14,19,25,28,21,22,26]]},STOP_PATTERN:{value:[1/6*7,1/6*7,1/6*7,1/6*7,1/6*7,1/6*7]},FORMAT:{value:\"upc_e\",writeable:!1}};r.prototype=Object.create(o.a.prototype,i),r.prototype.constructor=r,r.prototype._decodePayload=function(t,e,n){var r,o=this,i=0;for(r=0;r<6;r++){if(!(t=o._decodeCode(t.end)))return null;t.code>=o.CODE_G_START&&(t.code=t.code-o.CODE_G_START,i|=1<<5-r),e.push(t.code),n.push(t)}return o._determineParity(i,e)?t:null},r.prototype._determineParity=function(t,e){var n,r;for(r=0;r<this.CODE_FREQUENCY.length;r++)for(n=0;n<this.CODE_FREQUENCY[r].length;n++)if(t===this.CODE_FREQUENCY[r][n])return e.unshift(r),e.push(n),!0;return!1},r.prototype._convertToUPCA=function(t){var e=[t[0]],n=t[t.length-2];return e=n<=2?e.concat(t.slice(1,3)).concat([n,0,0,0,0]).concat(t.slice(3,6)):3===n?e.concat(t.slice(1,4)).concat([0,0,0,0,0]).concat(t.slice(4,6)):4===n?e.concat(t.slice(1,5)).concat([0,0,0,0,0,t[5]]):e.concat(t.slice(1,6)).concat([0,0,0,0,n]),e.push(t[t.length-1]),e},r.prototype._checksum=function(t){return o.a.prototype._checksum.call(this,this._convertToUPCA(t))},r.prototype._findEnd=function(t,e){return e=!0,o.a.prototype._findEnd.call(this,t,e)},r.prototype._verifyTrailingWhitespace=function(t){var e,n=this;if((e=t.end+(t.end-t.start)/2)<n._row.length&&n._matchRange(t.end,e,0))return t},e.a=r},function(t,e,n){\"use strict\";function r(t,e){o.a.call(this,t,e)}var o=n(4),i={FORMAT:{value:\"upc_a\",writeable:!1}};r.prototype=Object.create(o.a.prototype,i),r.prototype.constructor=r,r.prototype._decode=function(){var t=o.a.prototype._decode.call(this);return t&&t.code&&13===t.code.length&&\"0\"===t.code.charAt(0)?(t.code=t.code.substring(1),t):null},e.a=r},function(t,e){function n(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}t.exports=n},function(t,e){function n(){var t=new Float32Array(4);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t}t.exports=n},function(t,e){function n(t,e){var n=e[0],r=e[1],o=e[2],i=e[3],a=n*i-o*r;return a?(a=1/a,t[0]=i*a,t[1]=-r*a,t[2]=-o*a,t[3]=n*a,t):null}t.exports=n},function(t,e){function n(t,e,n){return t[0]=e[0]*n,t[1]=e[1]*n,t}t.exports=n},function(t,e){function n(t,e,n){var r=e[0],o=e[1];return t[0]=n[0]*r+n[2]*o,t[1]=n[1]*r+n[3]*o,t}t.exports=n},function(t,e){function n(t){var e=new Float32Array(3);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}t.exports=n},function(t,e,n){function r(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}var o=n(122),i=n(123),a=n(124),u=n(125),c=n(126);r.prototype.clear=o,r.prototype.delete=i,r.prototype.get=a,r.prototype.has=u,r.prototype.set=c,t.exports=r},function(t,e,n){function r(t){var e=this.__data__=new o(t);this.size=e.size}var o=n(10),i=n(149),a=n(150),u=n(151),c=n(152),s=n(153);r.prototype.clear=i,r.prototype.delete=a,r.prototype.get=u,r.prototype.has=c,r.prototype.set=s,t.exports=r},function(t,e,n){var r=n(5),o=r.Uint8Array;t.exports=o},function(t,e){function n(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}t.exports=n},function(t,e,n){function r(t,e){var n=a(t),r=!n&&i(t),f=!n&&!r&&u(t),d=!n&&!r&&!f&&s(t),h=n||r||f||d,p=h?o(t.length,String):[],v=p.length;for(var _ in t)!e&&!l.call(t,_)||h&&(\"length\"==_||f&&(\"offset\"==_||\"parent\"==_)||d&&(\"buffer\"==_||\"byteLength\"==_||\"byteOffset\"==_)||c(_,v))||p.push(_);return p}var o=n(107),i=n(18),a=n(2),u=n(44),c=n(15),s=n(45),f=Object.prototype,l=f.hasOwnProperty;t.exports=r},function(t,e){function n(t,e){for(var n=-1,r=null==t?0:t.length,o=Array(r);++n<r;)o[n]=e(t[n],n,t);return o}t.exports=n},function(t,e){function n(t,e){for(var n=-1,r=e.length,o=t.length;++n<r;)t[o+n]=e[n];return t}t.exports=n},function(t,e,n){var r=n(0),o=Object.create,i=function(){function t(){}return function(e){if(!r(e))return{};if(o)return o(e);t.prototype=e;var n=new t;return t.prototype=void 0,n}}();t.exports=i},function(t,e,n){function r(t,e,n,a,u){var c=-1,s=t.length;for(n||(n=i),u||(u=[]);++c<s;){var f=t[c];e>0&&n(f)?e>1?r(f,e-1,n,a,u):o(u,f):a||(u[u.length]=f)}return u}var o=n(90),i=n(128);t.exports=r},function(t,e,n){var r=n(117),o=r();t.exports=o},function(t,e,n){function r(t,e){e=o(e,t);for(var n=0,r=e.length;null!=t&&n<r;)t=t[i(e[n++])];return n&&n==r?t:void 0}var o=n(13),i=n(23);t.exports=r},function(t,e){function n(t,e){return null!=t&&e in Object(t)}t.exports=n},function(t,e,n){function r(t){return i(t)&&o(t)==a}var o=n(8),i=n(6),a=\"[object Arguments]\";t.exports=r},function(t,e,n){function r(t){return!(!a(t)||i(t))&&(o(t)?p:s).test(u(t))}var o=n(25),i=n(132),a=n(0),u=n(155),c=/[\\\\^$.*+?()[\\]{}|]/g,s=/^\\[object .+?Constructor\\]$/,f=Function.prototype,l=Object.prototype,d=f.toString,h=l.hasOwnProperty,p=RegExp(\"^\"+d.call(h).replace(c,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\");t.exports=r},function(t,e,n){function r(t){return a(t)&&i(t.length)&&!!u[o(t)]}var o=n(8),i=n(26),a=n(6),u={};u[\"[object Float32Array]\"]=u[\"[object Float64Array]\"]=u[\"[object Int8Array]\"]=u[\"[object Int16Array]\"]=u[\"[object Int32Array]\"]=u[\"[object Uint8Array]\"]=u[\"[object Uint8ClampedArray]\"]=u[\"[object Uint16Array]\"]=u[\"[object Uint32Array]\"]=!0,u[\"[object Arguments]\"]=u[\"[object Array]\"]=u[\"[object ArrayBuffer]\"]=u[\"[object Boolean]\"]=u[\"[object DataView]\"]=u[\"[object Date]\"]=u[\"[object Error]\"]=u[\"[object Function]\"]=u[\"[object Map]\"]=u[\"[object Number]\"]=u[\"[object Object]\"]=u[\"[object RegExp]\"]=u[\"[object Set]\"]=u[\"[object String]\"]=u[\"[object WeakMap]\"]=!1,t.exports=r},function(t,e,n){function r(t){if(!o(t))return a(t);var e=i(t),n=[];for(var r in t)(\"constructor\"!=r||!e&&c.call(t,r))&&n.push(r);return n}var o=n(0),i=n(40),a=n(144),u=Object.prototype,c=u.hasOwnProperty;t.exports=r},function(t,e,n){function r(t,e,n,f,l){t!==e&&a(e,function(a,s){if(c(a))l||(l=new o),u(t,e,s,n,r,f,l);else{var d=f?f(t[s],a,s+\"\",t,e,l):void 0;void 0===d&&(d=a),i(t,s,d)}},s)}var o=n(85),i=n(35),a=n(93),u=n(101),c=n(0),s=n(46);t.exports=r},function(t,e,n){function r(t,e,n,r,y,m,x){var b=t[n],E=e[n],C=x.get(E);if(C)return void o(t,n,C);var O=m?m(b,E,n+\"\",t,e,x):void 0,A=void 0===O;if(A){var R=f(E),w=!R&&d(E),T=!R&&!w&&_(E);O=E,R||w||T?f(b)?O=b:l(b)?O=u(b):w?(A=!1,O=i(E,!0)):T?(A=!1,O=a(E,!0)):O=[]:v(E)||s(E)?(O=b,s(b)?O=g(b):(!p(b)||r&&h(b))&&(O=c(E))):A=!1}A&&(x.set(E,O),y(O,E,r,m,x),x.delete(E)),o(t,n,O)}var o=n(35),i=n(111),a=n(112),u=n(113),c=n(127),s=n(18),f=n(2),l=n(159),d=n(44),h=n(25),p=n(0),v=n(160),_=n(45),g=n(164);t.exports=r},function(t,e,n){function r(t,e){return o(t,e,function(e,n){return i(t,n)})}var o=n(103),i=n(158);t.exports=r},function(t,e,n){function r(t,e,n){for(var r=-1,u=e.length,c={};++r<u;){var s=e[r],f=o(t,s);n(f,s)&&i(c,a(s,t),f)}return c}var o=n(94),i=n(105),a=n(13);t.exports=r},function(t,e,n){function r(t,e){return a(i(t,e,o),t+\"\")}var o=n(43),i=n(41),a=n(42);t.exports=r},function(t,e,n){function r(t,e,n,r){if(!u(t))return t;e=i(e,t);for(var s=-1,f=e.length,l=f-1,d=t;null!=d&&++s<f;){var h=c(e[s]),p=n;if(s!=l){var v=d[h];p=r?r(v,h,d):void 0,void 0===p&&(p=u(v)?v:a(e[s+1])?[]:{})}o(d,h,p),d=d[h]}return t}var o=n(36),i=n(13),a=n(15),u=n(0),c=n(23);t.exports=r},function(t,e,n){var r=n(156),o=n(37),i=n(43),a=o?function(t,e){return o(t,\"toString\",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:i;t.exports=a},function(t,e){function n(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}t.exports=n},function(t,e,n){function r(t){if(\"string\"==typeof t)return t;if(a(t))return i(t,r)+\"\";if(u(t))return f?f.call(t):\"\";var e=t+\"\";return\"0\"==e&&1/t==-c?\"-0\":e}var o=n(11),i=n(89),a=n(2),u=n(27),c=1/0,s=o?o.prototype:void 0,f=s?s.toString:void 0;t.exports=r},function(t,e){function n(t){return function(e){return t(e)}}t.exports=n},function(t,e,n){function r(t){var e=new t.constructor(t.byteLength);return new o(e).set(new o(t)),e}var o=n(86);t.exports=r},function(t,e,n){(function(t){function r(t,e){if(e)return t.slice();var n=t.length,r=s?s(n):new t.constructor(n);return t.copy(r),r}var o=n(5),i=\"object\"==typeof e&&e&&!e.nodeType&&e,a=i&&\"object\"==typeof t&&t&&!t.nodeType&&t,u=a&&a.exports===i,c=u?o.Buffer:void 0,s=c?c.allocUnsafe:void 0;t.exports=r}).call(e,n(29)(t))},function(t,e,n){function r(t,e){var n=e?o(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}var o=n(110);t.exports=r},function(t,e){function n(t,e){var n=-1,r=t.length;for(e||(e=Array(r));++n<r;)e[n]=t[n];return e}t.exports=n},function(t,e,n){function r(t,e,n,r){var a=!n;n||(n={});for(var u=-1,c=e.length;++u<c;){var s=e[u],f=r?r(n[s],t[s],s,n,t):void 0;void 0===f&&(f=t[s]),a?i(n,s,f):o(n,s,f)}return n}var o=n(36),i=n(21);t.exports=r},function(t,e,n){var r=n(5),o=r[\"__core-js_shared__\"];t.exports=o},function(t,e,n){function r(t){return o(function(e,n){var r=-1,o=n.length,a=o>1?n[o-1]:void 0,u=o>2?n[2]:void 0;for(a=t.length>3&&\"function\"==typeof a?(o--,a):void 0,u&&i(n[0],n[1],u)&&(a=o<3?void 0:a,o=1),e=Object(e);++r<o;){var c=n[r];c&&t(e,c,r,a)}return e})}var o=n(104),i=n(129);t.exports=r},function(t,e){function n(t){return function(e,n,r){for(var o=-1,i=Object(e),a=r(e),u=a.length;u--;){var c=a[t?u:++o];if(n(i[c],c,i)===!1)break}return e}}t.exports=n},function(t,e,n){function r(t){return a(i(t,void 0,o),t+\"\")}var o=n(157),i=n(41),a=n(42);t.exports=r},function(t,e,n){function r(t){var e=a.call(t,c),n=t[c];try{t[c]=void 0;var r=!0}catch(t){}var o=u.call(t);return r&&(e?t[c]=n:delete t[c]),o}var o=n(11),i=Object.prototype,a=i.hasOwnProperty,u=i.toString,c=o?o.toStringTag:void 0;t.exports=r},function(t,e){function n(t,e){return null==t?void 0:t[e]}t.exports=n},function(t,e,n){function r(t,e,n){e=o(e,t);for(var r=-1,f=e.length,l=!1;++r<f;){var d=s(e[r]);if(!(l=null!=t&&n(t,d)))break;t=t[d]}return l||++r!=f?l:!!(f=null==t?0:t.length)&&c(f)&&u(d,f)&&(a(t)||i(t))}var o=n(13),i=n(18),a=n(2),u=n(15),c=n(26),s=n(23);t.exports=r},function(t,e,n){function r(){this.__data__=o?o(null):{},this.size=0}var o=n(16);t.exports=r},function(t,e){function n(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}t.exports=n},function(t,e,n){function r(t){var e=this.__data__;if(o){var n=e[t];return n===i?void 0:n}return u.call(e,t)?e[t]:void 0}var o=n(16),i=\"__lodash_hash_undefined__\",a=Object.prototype,u=a.hasOwnProperty;t.exports=r},function(t,e,n){function r(t){var e=this.__data__;return o?void 0!==e[t]:a.call(e,t)}var o=n(16),i=Object.prototype,a=i.hasOwnProperty;t.exports=r},function(t,e,n){function r(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=o&&void 0===e?i:e,this}var o=n(16),i=\"__lodash_hash_undefined__\";t.exports=r},function(t,e,n){function r(t){return\"function\"!=typeof t.constructor||a(t)?{}:o(i(t))}var o=n(91),i=n(39),a=n(40);t.exports=r},function(t,e,n){function r(t){return a(t)||i(t)||!!(u&&t&&t[u])}var o=n(11),i=n(18),a=n(2),u=o?o.isConcatSpreadable:void 0;t.exports=r},function(t,e,n){function r(t,e,n){if(!u(n))return!1;var r=typeof e;return!!(\"number\"==r?i(n)&&a(e,n.length):\"string\"==r&&e in n)&&o(n[e],t)}var o=n(17),i=n(24),a=n(15),u=n(0);t.exports=r},function(t,e,n){function r(t,e){if(o(t))return!1;var n=typeof t;return!(\"number\"!=n&&\"symbol\"!=n&&\"boolean\"!=n&&null!=t&&!i(t))||(u.test(t)||!a.test(t)||null!=e&&t in Object(e))}var o=n(2),i=n(27),a=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,u=/^\\w*$/;t.exports=r},function(t,e){function n(t){var e=typeof t;return\"string\"==e||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==t:null===t}t.exports=n},function(t,e,n){function r(t){return!!i&&i in t}var o=n(115),i=function(){var t=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||\"\");return t?\"Symbol(src)_1.\"+t:\"\"}();t.exports=r},function(t,e){function n(){this.__data__=[],this.size=0}t.exports=n},function(t,e,n){function r(t){var e=this.__data__,n=o(e,t);return!(n<0)&&(n==e.length-1?e.pop():a.call(e,n,1),--this.size,!0)}var o=n(12),i=Array.prototype,a=i.splice;t.exports=r},function(t,e,n){function r(t){var e=this.__data__,n=o(e,t);return n<0?void 0:e[n][1]}var o=n(12);t.exports=r},function(t,e,n){function r(t){return o(this.__data__,t)>-1}var o=n(12);t.exports=r},function(t,e,n){function r(t,e){var n=this.__data__,r=o(n,t);return r<0?(++this.size,n.push([t,e])):n[r][1]=e,this}var o=n(12);t.exports=r},function(t,e,n){function r(){this.size=0,this.__data__={hash:new o,map:new(a||i),string:new o}}var o=n(84),i=n(10),a=n(33);t.exports=r},function(t,e,n){function r(t){var e=o(this,t).delete(t);return this.size-=e?1:0,e}var o=n(14);t.exports=r},function(t,e,n){function r(t){return o(this,t).get(t)}var o=n(14);t.exports=r},function(t,e,n){function r(t){return o(this,t).has(t)}var o=n(14);t.exports=r},function(t,e,n){function r(t,e){var n=o(this,t),r=n.size;return n.set(t,e),this.size+=n.size==r?0:1,this}var o=n(14);t.exports=r},function(t,e,n){function r(t){var e=o(t,function(t){return n.size===i&&n.clear(),t}),n=e.cache;return e}var o=n(161),i=500;t.exports=r},function(t,e){function n(t){var e=[];if(null!=t)for(var n in Object(t))e.push(n);return e}t.exports=n},function(t,e,n){(function(t){var r=n(38),o=\"object\"==typeof e&&e&&!e.nodeType&&e,i=o&&\"object\"==typeof t&&t&&!t.nodeType&&t,a=i&&i.exports===o,u=a&&r.process,c=function(){try{return u&&u.binding&&u.binding(\"util\")}catch(t){}}();t.exports=c}).call(e,n(29)(t))},function(t,e){function n(t){return o.call(t)}var r=Object.prototype,o=r.toString;t.exports=n},function(t,e){function n(t,e){return function(n){return t(e(n))}}t.exports=n},function(t,e){function n(t){var e=0,n=0;return function(){var a=i(),u=o-(a-n);if(n=a,u>0){if(++e>=r)return arguments[0]}else e=0;return t.apply(void 0,arguments)}}var r=800,o=16,i=Date.now;t.exports=n},function(t,e,n){function r(){this.__data__=new o,this.size=0}var o=n(10);t.exports=r},function(t,e){function n(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n}t.exports=n},function(t,e){function n(t){return this.__data__.get(t)}t.exports=n},function(t,e){function n(t){return this.__data__.has(t)}t.exports=n},function(t,e,n){function r(t,e){var n=this.__data__;if(n instanceof o){var r=n.__data__;if(!i||r.length<u-1)return r.push([t,e]),this.size=++n.size,this;n=this.__data__=new a(r)}return n.set(t,e),this.size=n.size,this}var o=n(10),i=n(33),a=n(34),u=200;t.exports=r},function(t,e,n){var r=n(143),o=/^\\./,i=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,a=/\\\\(\\\\)?/g,u=r(function(t){var e=[];return o.test(t)&&e.push(\"\"),t.replace(i,function(t,n,r,o){e.push(r?o.replace(a,\"$1\"):n||t)}),e});t.exports=u},function(t,e){function n(t){if(null!=t){try{return o.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"}var r=Function.prototype,o=r.toString;t.exports=n},function(t,e){function n(t){return function(){return t}}t.exports=n},function(t,e,n){function r(t){return(null==t?0:t.length)?o(t,1):[]}var o=n(92);t.exports=r},function(t,e,n){function r(t,e){return null!=t&&i(t,e,o)}var o=n(95),i=n(121);t.exports=r},function(t,e,n){function r(t){return i(t)&&o(t)}var o=n(24),i=n(6);t.exports=r},function(t,e,n){function r(t){if(!a(t)||o(t)!=u)return!1;var e=i(t);if(null===e)return!0;var n=l.call(e,\"constructor\")&&e.constructor;return\"function\"==typeof n&&n instanceof n&&f.call(n)==d}var o=n(8),i=n(39),a=n(6),u=\"[object Object]\",c=Function.prototype,s=Object.prototype,f=c.toString,l=s.hasOwnProperty,d=f.call(Object);t.exports=r},function(t,e,n){function r(t,e){if(\"function\"!=typeof t||null!=e&&\"function\"!=typeof e)throw new TypeError(i);var n=function(){var r=arguments,o=e?e.apply(this,r):r[0],i=n.cache;if(i.has(o))return i.get(o);var a=t.apply(this,r);return n.cache=i.set(o,a)||i,a};return n.cache=new(r.Cache||o),n}var o=n(34),i=\"Expected a function\";r.Cache=o,t.exports=r},function(t,e,n){var r=n(102),o=n(118),i=o(function(t,e){return null==t?{}:r(t,e)});t.exports=i},function(t,e){function n(){return!1}t.exports=n},function(t,e,n){function r(t){return o(t,i(t))}var o=n(114),i=n(46);t.exports=r},function(t,e,n){function r(t){return null==t?\"\":o(t)}var o=n(108);t.exports=r},function(t,e,n){t.exports=n(48)}])});"," /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scanner.vue?vue&type=style&index=0&id=4ebacf15&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b437ebe2\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scanner.vue?vue&type=style&index=0&id=4ebacf15&scoped=true&lang=css&\", function() {\n     var newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scanner.vue?vue&type=style&index=0&id=4ebacf15&scoped=true&lang=css&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","import mod from \"-!../node_modules/vue-style-loader/index.js!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scanner.vue?vue&type=style&index=0&id=4ebacf15&scoped=true&lang=css&\"; export default mod; export * from \"-!../node_modules/vue-style-loader/index.js!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scanner.vue?vue&type=style&index=0&id=4ebacf15&scoped=true&lang=css&\"","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"\\n.viewport[data-v-4ebacf15] {\\n  position: relative;\\n}\\n.viewport canvas[data-v-4ebacf15],\\n.viewport video[data-v-4ebacf15] {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  const {navigator} = window;\n\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (typeof data !== 'object') {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObject = typeof data[key] === 'object';\n    const value = isObject ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObject && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const browserDetails = utils.detectBrowser(window);\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(cs) {\n    return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n      if (c.audio && !stream.getAudioTracks().length ||\n          c.video && !stream.getVideoTracks().length) {\n        stream.getTracks().forEach(track => {\n          track.stop();\n        });\n        throw new DOMException('', 'NotFoundError');\n      }\n      return stream;\n    }, e => Promise.reject(shimError_(e))));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n    return getSourceId(constraints)\n      .then(sourceId => {\n        const widthSpecified = constraints.video && constraints.video.width;\n        const heightSpecified = constraints.video && constraints.video.height;\n        const frameRateSpecified = constraints.video &&\n          constraints.video.frameRate;\n        constraints.video = {\n          mandatory: {\n            chromeMediaSource: 'desktop',\n            chromeMediaSourceId: sourceId,\n            maxFrameRate: frameRateSpecified || 3\n          }\n        };\n        if (widthSpecified) {\n          constraints.video.mandatory.maxWidth = widthSpecified;\n        }\n        if (heightSpecified) {\n          constraints.video.mandatory.maxHeight = heightSpecified;\n        }\n        return window.navigator.mediaDevices.getUserMedia(constraints);\n      });\n  };\n}\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\n/* iterates the stats graph recursively. */\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nfunction filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = (e) => {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', te => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers()\n                .find(r => r.track && r.track.id === te.track.id);\n            } else {\n              receiver = {track: te.track};\n            }\n\n            const event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = {receiver};\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(track => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers()\n                .find(r => r.track && r.track.id === track.id);\n            } else {\n              receiver = {track};\n            }\n            const event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = {receiver};\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n        };\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        let sender = origAddTrack.apply(this, arguments);\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n          this._senders.push(sender);\n        }\n        return sender;\n      };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n        origRemoveTrack.apply(this, arguments);\n        const idx = this._senders.indexOf(sender);\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n\n      stream.getTracks().forEach(track => {\n        const sender = this._senders.find(s => s.track === track);\n        if (sender) { // remove sender\n          this._senders.splice(this._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function() {\n        const receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(receiver => receiver._pc = this);\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function() {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams)\n      .map(streamId => this._shimmedLocalStreams[streamId][0]);\n  };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    const sender = origAddTrack.apply(this, arguments);\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n    return sender;\n  };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n        const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n        if (idx !== -1) {\n          this._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n        if (this._shimmedLocalStreams[streamId].length === 1) {\n          delete this._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrack(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams = function() {\n    const nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n  };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n    delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n    delete this._streams[stream.id];\n  };\n\n  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException(\n        'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n        'InvalidStateError');\n    }\n    const streams = [].slice.call(arguments, 1);\n    if (streams.length !== 1 ||\n        !streams[0].getTracks().find(t => t === track)) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException(\n        'The adapter.js addTrack polyfill only supports a single ' +\n        ' stream which is associated with the specified track.',\n        'NotSupportedError');\n    }\n\n    const alreadyExists = this.getSenders().find(s => s.track === track);\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n    }\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    const oldStream = this._streams[stream.id];\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track);\n\n      // Trigger ONN async.\n      Promise.resolve().then(() => {\n        this.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      const newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n    return this.getSenders().find(s => s.track === track);\n  };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    window.RTCPeerConnection.prototype[method] = function() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    };\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription = function() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException(\n        'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n        'InvalidStateError');\n    }\n    // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n    const isLocal = sender._pc === this;\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n    }\n\n    // Search for the native stream the senders track belongs to.\n    this._streams = this._streams || {};\n    let stream;\n    Object.keys(this._streams).forEach(streamid => {\n      const hasTrack = this._streams[streamid].getTracks()\n        .find(track => sender.track === track);\n      if (hasTrack) {\n        stream = this._streams[streamid];\n      }\n    });\n\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\n\nexport function shimPeerConnection(window) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function(selector,\n      successCallback, errorCallback) {\n    const args = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof arguments[0] !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        args[1](makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        arguments[0]]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(successCallback, errorCallback);\n  };\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n              window.RTCIceCandidate :\n              window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate = function() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\n\nexport function fixNegotiationNeeded(window) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (pc.signalingState !== 'stable') {\n      return;\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator.mediaDevices);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window) {\n  const browserDetails = utils.detectBrowser(window);\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n    if (!(constraints && constraints.video)) {\n      const err = new DOMException('getDisplayMedia without video ' +\n          'constraints is undefined');\n      err.name = 'NotFoundError';\n      // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n      err.code = 8;\n      return Promise.reject(err);\n    }\n    if (constraints.video === true) {\n      constraints.video = {mediaSource: preferredMediaSource};\n    } else {\n      constraints.video.mediaSource = preferredMediaSource;\n    }\n    return window.navigator.mediaDevices.getUserMedia(constraints);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n              window.RTCIceCandidate :\n              window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate = function() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function(\n    selector,\n    onSucc,\n    onErr\n  ) {\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    utils.deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(sender => {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        this.removeTrack(sender);\n      }\n    });\n  };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      return this._localStreams;\n    };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      stream.getTracks().forEach(track => _addTrack.call(this, track, stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      if (stream) {\n        if (!this._localStreams) {\n          this._localStreams = [stream];\n        } else if (!this._localStreams.includes(stream)) {\n          this._localStreams.push(stream);\n        }\n      }\n      return _addTrack.call(this, track, stream);\n    };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      const index = this._localStreams.indexOf(stream);\n      if (index === -1) {\n        return;\n      }\n      this._localStreams.splice(index, 1);\n      const tracks = stream.getTracks();\n      this.getSenders().forEach(sender => {\n        if (tracks.includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n      return this._remoteStreams ? this._remoteStreams : [];\n    };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      const pc = this;\n      if (!this._onaddstreampoly) {\n        this.addEventListener('track', this._onaddstreampoly = function(e) {\n          e.streams.forEach(stream => {\n            if (!pc._remoteStreams) {\n              pc._remoteStreams = [];\n            }\n            if (pc._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            pc._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            pc.dispatchEvent(event);\n          });\n        });\n      }\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const createOffer = prototype.createOffer;\n  const createAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer = function(successCallback, failureCallback) {\n    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n    const promise = createOffer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.createAnswer = function(successCallback, failureCallback) {\n    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n    const promise = createAnswer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    if (pcConfig && pcConfig.iceServers) {\n      const newIceServers = [];\n      for (let i = 0; i < pcConfig.iceServers.length; i++) {\n        let server = pcConfig.iceServers[i];\n        if (!server.hasOwnProperty('urls') &&\n            server.hasOwnProperty('url')) {\n          utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n          server = JSON.parse(JSON.stringify(server));\n          server.urls = server.url;\n          delete server.url;\n          newIceServers.push(server);\n        } else {\n          newIceServers.push(pcConfig.iceServers[i]);\n        }\n      }\n      pcConfig.iceServers = newIceServers;\n    }\n    return new OrigPeerConnection(pcConfig, pcConstraints);\n  };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in window.RTCPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n      // defined for some reason even when window.RTCTransceiver is not.\n      !window.RTCTransceiver) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n    if (offerOptions) {\n      if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n      }\n      const audioTransceiver = this.getTransceivers().find(transceiver =>\n        transceiver.sender.track &&\n        transceiver.sender.track.kind === 'audio');\n      if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n        if (audioTransceiver.direction === 'sendrecv') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('sendonly');\n          } else {\n            audioTransceiver.direction = 'sendonly';\n          }\n        } else if (audioTransceiver.direction === 'recvonly') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('inactive');\n          } else {\n            audioTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveAudio === true &&\n          !audioTransceiver) {\n        this.addTransceiver('audio');\n      }\n\n      if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n      }\n      const videoTransceiver = this.getTransceivers().find(transceiver =>\n        transceiver.sender.track &&\n        transceiver.sender.track.kind === 'video');\n      if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n        if (videoTransceiver.direction === 'sendrecv') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('sendonly');\n          } else {\n            videoTransceiver.direction = 'sendonly';\n          }\n        } else if (videoTransceiver.direction === 'recvonly') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('inactive');\n          } else {\n            videoTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveVideo === true &&\n          !videoTransceiver) {\n        this.addTransceiver('video');\n      }\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window) {\n  if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n    this._sctp = null;\n\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      let maxMessageSize;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      const sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function() {\n    const dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeAllowExtmapMixed(window) {\n  /* remove a=extmap-allow-mixed for Chrome < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      desc.sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimGetDisplayMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter = adapterFactory({window});\nexport default adapter;\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      { staticClass: \"viewport scanner\", attrs: { id: \"interactive\" } },\n      [_c(\"video\"), _vm._v(\" \"), _c(\"canvas\", { staticClass: \"drawingBuffer\" })]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scanner.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scanner.vue?vue&type=script&lang=js&\"","<template>\n  <div id=\"interactive\" class=\"viewport scanner\">\n    <video />\n    <canvas class=\"drawingBuffer\" />\n  </div>\n</template>\n\n<script>\nimport Quagga from 'quagga';\n\nexport default {\n  name: 'QuaggaScanner',\n  props: {\n    onDetected: {\n      type: Function,\n    },\n    onProcessed: {\n      type: Function,\n    },\n    readerTypes: {\n      type: Array,\n      default: () => {\n        return ['code_128_reader'];\n      },\n    },\n    readerSize: {\n      width: {\n        type: Number,\n        default: 640,\n      },\n      height: {\n        type: Number,\n        default: 480,\n      },\n    },\n  },\n  data: function() {\n    return {\n      quaggaState: {\n        inputStream: {\n          type: 'LiveStream',\n          constraints: {\n            width: { min: this.readerSize.width },\n            height: { min: this.readerSize.height },\n            facingMode: 'environment',\n            aspectRatio: { min: 1, max: 2 },\n          },\n        },\n        locator: {\n          patchSize: 'medium',\n          halfSample: true,\n        },\n        numOfWorkers: 2,\n        frequency: 10,\n        decoder: {\n          readers: this.readerTypes,\n        },\n        locate: true,\n      },\n    };\n  },\n  mounted: function() {\n    Quagga.init(this.quaggaState, function(err) {\n      if (err) {\n        return console.log(err);\n      }\n      Quagga.start();\n    });\n    Quagga.onDetected(this.onDetected ? this.onDetected : this._onDetected);\n    Quagga.onProcessed(this.onProcessed ? this.onProcessed : this._onProcessed);\n  },\n  methods: {\n    _onProcessed: function(result) {\n      let drawingCtx = Quagga.canvas.ctx.overlay;\n\n      let drawingCanvas = Quagga.canvas.dom.overlay;\n\n      if (result) {\n        if (result.boxes) {\n          drawingCtx.clearRect(\n            0,\n            0,\n            parseInt(drawingCanvas.getAttribute('width')),\n            parseInt(drawingCanvas.getAttribute('height'))\n          );\n          result.boxes\n            .filter(function(box) {\n              return box !== result.box;\n            })\n            .forEach(function(box) {\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\n                color: 'green',\n                lineWidth: 2,\n              });\n            });\n        }\n        if (result.box) {\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\n            color: '#00F',\n            lineWidth: 2,\n          });\n        }\n\n        if (result.codeResult && result.codeResult.code) {\n          Quagga.ImageDebug.drawPath(\n            result.line,\n            { x: 'x', y: 'y' },\n            drawingCtx,\n            { color: 'red', lineWidth: 3 }\n          );\n        }\n      }\n    },\n    _onDetected: function(result) {\n      console.log('detected: ', result);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.viewport {\n  position: relative;\n}\n\n.viewport canvas,\n.viewport video {\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n</style>\n","import { render, staticRenderFns } from \"./Scanner.vue?vue&type=template&id=4ebacf15&scoped=true&\"\nimport script from \"./Scanner.vue?vue&type=script&lang=js&\"\nexport * from \"./Scanner.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Scanner.vue?vue&type=style&index=0&id=4ebacf15&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4ebacf15\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/shintaro/workspace_js/vuejs/vue-quagga-js/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('4ebacf15', component.options)\n    } else {\n      api.reload('4ebacf15', component.options)\n    }\n    module.hot.accept(\"./Scanner.vue?vue&type=template&id=4ebacf15&scoped=true&\", function () {\n      api.rerender('4ebacf15', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/Scanner.vue\"\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import 'webrtc-adapter';\nimport Scanner from './Scanner.vue';\n\nexport default {\n  install: function(Vue, options) {\n    Vue.component('v-quagga', Scanner);\n  },\n};\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n"],"sourceRoot":""}